<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.6.0_07" class="java.beans.XMLDecoder"> 
 <object id="Element0" class="org.concord.mw2d.models.Element"> 
  <void property="epsilon"> 
   <double>0.009999999776482582</double> 
  </void> 
  <void property="mass"> 
   <double>0.16666666666666666</double> 
  </void> 
  <void property="sigma"> 
   <double>10.0</double> 
  </void> 
 </object> 
 <object id="Element1" class="org.concord.mw2d.models.Element"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="epsilon"> 
   <double>0.009999999776482582</double> 
  </void> 
  <void property="mass"> 
   <double>0.16666666666666666</double> 
  </void> 
  <void property="sigma"> 
   <double>10.0</double> 
  </void> 
 </object> 
 <object id="Element2" class="org.concord.mw2d.models.Element"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="epsilon"> 
   <double>0.009999999776482582</double> 
  </void> 
  <void property="mass"> 
   <double>0.4166666666666667</double> 
  </void> 
  <void property="sigma"> 
   <double>21.0</double> 
  </void> 
 </object> 
 <object id="Element3" class="org.concord.mw2d.models.Element"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="epsilon"> 
   <double>0.009999999776482582</double> 
  </void> 
  <void property="mass"> 
   <double>0.16666666666666666</double> 
  </void> 
  <void property="sigma"> 
   <double>16.0</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Affinity"> 
  <void property="epsilon"> 
   <void method="put"> 
    <object id="Pair0" class="org.concord.mw2d.models.Pair"> 
     <void property="element1"> 
      <object idref="Element2"/> 
     </void> 
     <void property="element2"> 
      <object idref="Element3"/> 
     </void> 
    </object> 
    <double>0.1</double> 
   </void> 
   <void method="put"> 
    <object id="Pair1" class="org.concord.mw2d.models.Pair"> 
     <void property="element1"> 
      <object idref="Element0"/> 
     </void> 
     <void property="element2"> 
      <object idref="Element1"/> 
     </void> 
    </object> 
    <double>0.1</double> 
   </void> 
   <void method="put"> 
    <object id="Pair2" class="org.concord.mw2d.models.Pair"> 
     <void property="element1"> 
      <object idref="Element1"/> 
     </void> 
     <void property="element2"> 
      <object idref="Element3"/> 
     </void> 
    </object> 
    <double>0.1</double> 
   </void> 
   <void method="put"> 
    <object id="Pair3" class="org.concord.mw2d.models.Pair"> 
     <void property="element1"> 
      <object idref="Element0"/> 
     </void> 
     <void property="element2"> 
      <object idref="Element2"/> 
     </void> 
    </object> 
    <double>0.1</double> 
   </void> 
   <void method="put"> 
    <object id="Pair4" class="org.concord.mw2d.models.Pair"> 
     <void property="element1"> 
      <object idref="Element1"/> 
     </void> 
     <void property="element2"> 
      <object idref="Element2"/> 
     </void> 
    </object> 
    <double>0.1</double> 
   </void> 
   <void method="put"> 
    <object id="Pair5" class="org.concord.mw2d.models.Pair"> 
     <void property="element1"> 
      <object idref="Element0"/> 
     </void> 
     <void property="element2"> 
      <object idref="Element3"/> 
     </void> 
    </object> 
    <double>0.009999999776482582</double> 
   </void> 
   <void method="put"> 
    <object id="Pair6" class="org.concord.mw2d.models.Pair"> 
     <void property="element1"> 
      <object idref="Element0"/> 
     </void> 
     <void property="element2"> 
      <object id="Element4" class="org.concord.mw2d.models.Element"> 
       <void property="ID"> 
        <int>4</int> 
       </void> 
       <void property="mass"> 
        <double>5.0</double> 
       </void> 
      </object> 
     </void> 
    </object> 
    <double>0.1</double> 
   </void> 
   <void method="put"> 
    <object id="Pair7" class="org.concord.mw2d.models.Pair"> 
     <void property="element1"> 
      <object idref="Element1"/> 
     </void> 
     <void property="element2"> 
      <object idref="Element4"/> 
     </void> 
    </object> 
    <double>0.1</double> 
   </void> 
   <void method="put"> 
    <object id="Pair8" class="org.concord.mw2d.models.Pair"> 
     <void property="element1"> 
      <object idref="Element2"/> 
     </void> 
     <void property="element2"> 
      <object idref="Element4"/> 
     </void> 
    </object> 
    <double>0.1</double> 
   </void> 
   <void method="put"> 
    <object id="Pair9" class="org.concord.mw2d.models.Pair"> 
     <void property="element1"> 
      <object idref="Element3"/> 
     </void> 
     <void property="element2"> 
      <object idref="Element4"/> 
     </void> 
    </object> 
    <double>0.1</double> 
   </void> 
  </void> 
  <void property="lbMixing"> 
   <void method="put"> 
    <object idref="Pair0"/> 
    <boolean>true</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair1"/> 
    <boolean>true</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair2"/> 
    <boolean>true</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair3"/> 
    <boolean>true</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair4"/> 
    <boolean>true</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair5"/> 
    <boolean>true</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair6"/> 
    <boolean>true</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair7"/> 
    <boolean>true</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair8"/> 
    <boolean>true</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair9"/> 
    <boolean>true</boolean> 
   </void> 
  </void> 
  <void property="repulsive"> 
   <void method="put"> 
    <object idref="Pair0"/> 
    <boolean>false</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair1"/> 
    <boolean>false</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair2"/> 
    <boolean>false</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair3"/> 
    <boolean>false</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair4"/> 
    <boolean>false</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair5"/> 
    <boolean>false</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair6"/> 
    <boolean>false</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair7"/> 
    <boolean>false</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair8"/> 
    <boolean>false</boolean> 
   </void> 
   <void method="put"> 
    <object idref="Pair9"/> 
    <boolean>false</boolean> 
   </void> 
  </void> 
  <void property="sigma"> 
   <void method="put"> 
    <object idref="Pair0"/> 
    <double>24.24871130596428</double> 
   </void> 
   <void method="put"> 
    <object idref="Pair1"/> 
    <double>9.899494936611665</double> 
   </void> 
   <void method="put"> 
    <object idref="Pair2"/> 
    <double>19.79898987322333</double> 
   </void> 
   <void method="put"> 
    <object idref="Pair3"/> 
    <double>12.12435565298214</double> 
   </void> 
   <void method="put"> 
    <object idref="Pair4"/> 
    <double>17.146428199482248</double> 
   </void> 
   <void method="put"> 
    <object idref="Pair5"/> 
    <double>12.649110640673518</double> 
   </void> 
   <void method="put"> 
    <object idref="Pair6"/> 
    <double>9.16515138991168</double> 
   </void> 
   <void method="put"> 
    <object idref="Pair7"/> 
    <double>12.96148139681572</double> 
   </void> 
   <void method="put"> 
    <object idref="Pair8"/> 
    <double>15.874507866387544</double> 
   </void> 
   <void method="put"> 
    <object idref="Pair9"/> 
    <double>18.33030277982336</double> 
   </void> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.AtomicModel$State"> 
  <void property="boundary"> 
   <object class="org.concord.mw2d.models.RectangularBoundary$Delegate"> 
    <void property="height"> 
     <double>500.0</double> 
    </void> 
    <void property="viewSize"> 
     <object class="java.awt.Dimension"> 
      <int>750</int> 
      <int>500</int> 
     </object> 
    </void> 
    <void property="width"> 
     <double>750.0</double> 
    </void> 
   </object> 
  </void> 
  <void property="heatBath"> 
   <object class="org.concord.mw2d.models.HeatBath"> 
    <void property="expectedTemperature"> 
     <double>800.0</double> 
    </void> 
   </object> 
  </void> 
  <void property="lightSource"> 
   <object class="org.concord.mw2d.models.LightSource"/> 
  </void> 
  <void property="numberOfParticles"> 
   <int>109</int> 
  </void> 
  <void property="obstacles"> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>22.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>18.0</double> 
     </void> 
     <void property="y"> 
      <double>283.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>22.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="3"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>111.0</double> 
     </void> 
     <void property="x"> 
      <double>131.0</double> 
     </void> 
     <void property="y"> 
      <double>285.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>25.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="3"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>73.0</double> 
     </void> 
     <void property="x"> 
      <double>512.0</double> 
     </void> 
     <void property="y"> 
      <double>281.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>20.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>24.0</double> 
     </void> 
     <void property="x"> 
      <double>726.0</double> 
     </void> 
     <void property="y"> 
      <double>285.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>25.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>18.0</double> 
     </void> 
     <void property="x"> 
      <double>1.0</double> 
     </void> 
     <void property="y"> 
      <double>157.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>27.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="3"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>256.0</double> 
     </void> 
     <void property="x"> 
      <double>162.0</double> 
     </void> 
     <void property="y"> 
      <double>156.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>17.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="3"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>70.0</double> 
     </void> 
     <void property="x"> 
      <double>514.0</double> 
     </void> 
     <void property="y"> 
      <double>162.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>18.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>101.0</double> 
     </void> 
     <void property="x"> 
      <double>648.0</double> 
     </void> 
     <void property="y"> 
      <double>167.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>11.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>65.0</double> 
     </void> 
     <void property="x"> 
      <double>66.0</double> 
     </void> 
     <void property="y"> 
      <double>318.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>45.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>8.0</double> 
     </void> 
     <void property="x"> 
      <double>121.0</double> 
     </void> 
     <void property="y"> 
      <double>272.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>7.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>37.0</double> 
     </void> 
     <void property="x"> 
      <double>120.0</double> 
     </void> 
     <void property="y"> 
      <double>260.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>48.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>9.0</double> 
     </void> 
     <void property="x"> 
      <double>162.0</double> 
     </void> 
     <void property="y"> 
      <double>215.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>15.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>93.0</double> 
     </void> 
     <void property="x"> 
      <double>68.0</double> 
     </void> 
     <void property="y"> 
      <double>143.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>41.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>8.0</double> 
     </void> 
     <void property="x"> 
      <double>152.0</double> 
     </void> 
     <void property="y"> 
      <double>176.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>55.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>10.0</double> 
     </void> 
     <void property="x"> 
      <double>246.0</double> 
     </void> 
     <void property="y"> 
      <double>250.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>10.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>49.0</double> 
     </void> 
     <void property="x"> 
      <double>261.0</double> 
     </void> 
     <void property="y"> 
      <double>253.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>56.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>11.0</double> 
     </void> 
     <void property="x"> 
      <double>314.0</double> 
     </void> 
     <void property="y"> 
      <double>249.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>55.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>7.0</double> 
     </void> 
     <void property="x"> 
      <double>407.0</double> 
     </void> 
     <void property="y"> 
      <double>228.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>191.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>11.0</double> 
     </void> 
     <void property="x"> 
      <double>420.0</double> 
     </void> 
     <void property="y"> 
      <double>141.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>215.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>12.0</double> 
     </void> 
     <void property="x"> 
      <double>463.0</double> 
     </void> 
     <void property="y"> 
      <double>129.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>19.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>35.0</double> 
     </void> 
     <void property="x"> 
      <double>480.0</double> 
     </void> 
     <void property="y"> 
      <double>142.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>18.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>29.0</double> 
     </void> 
     <void property="x"> 
      <double>480.0</double> 
     </void> 
     <void property="y"> 
      <double>309.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>9.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>20.0</double> 
     </void> 
     <void property="x"> 
      <double>479.0</double> 
     </void> 
     <void property="y"> 
      <double>331.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>35.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>27.0</double> 
     </void> 
     <void property="x"> 
      <double>236.0</double> 
     </void> 
     <void property="y"> 
      <double>324.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>13.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>42.0</double> 
     </void> 
     <void property="x"> 
      <double>267.0</double> 
     </void> 
     <void property="y"> 
      <double>343.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>38.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>29.0</double> 
     </void> 
     <void property="x"> 
      <double>309.0</double> 
     </void> 
     <void property="y"> 
      <double>325.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>14.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>97.0</double> 
     </void> 
     <void property="x"> 
      <double>237.0</double> 
     </void> 
     <void property="y"> 
      <double>308.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>33.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>7.0</double> 
     </void> 
     <void property="x"> 
      <double>605.0</double> 
     </void> 
     <void property="y"> 
      <double>309.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>23.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>10.0</double> 
     </void> 
     <void property="x"> 
      <double>592.0</double> 
     </void> 
     <void property="y"> 
      <double>307.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>48.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="3"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>10.0</double> 
     </void> 
     <void property="x"> 
      <double>712.0</double> 
     </void> 
     <void property="y"> 
      <double>282.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>38.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="3"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>35.0</double> 
     </void> 
     <void property="x"> 
      <double>660.0</double> 
     </void> 
     <void property="y"> 
      <double>303.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>180.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>14.0</double> 
     </void> 
     <void property="x"> 
      <double>19.0</double> 
     </void> 
     <void property="y"> 
      <double>147.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>155.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>9.0</double> 
     </void> 
     <void property="x"> 
      <double>66.0</double> 
     </void> 
     <void property="y"> 
      <double>161.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>216.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>9.0</double> 
     </void> 
     <void property="x"> 
      <double>615.0</double> 
     </void> 
     <void property="y"> 
      <double>130.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>83.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>87.0</double> 
     </void> 
     <void property="x"> 
      <double>646.0</double> 
     </void> 
     <void property="y"> 
      <double>188.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>26.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>38.0</double> 
     </void> 
     <void property="x"> 
      <double>647.0</double> 
     </void> 
     <void property="y"> 
      <double>139.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>20.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>19.0</double> 
     </void> 
     <void property="x"> 
      <double>693.0</double> 
     </void> 
     <void property="y"> 
      <double>145.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>7.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>22.0</double> 
     </void> 
     <void property="x"> 
      <double>591.0</double> 
     </void> 
     <void property="y"> 
      <double>151.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>181.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>7.0</double> 
     </void> 
     <void property="x"> 
      <double>46.0</double> 
     </void> 
     <void property="y"> 
      <double>141.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>202.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>5.0</double> 
     </void> 
     <void property="x"> 
      <double>638.0</double> 
     </void> 
     <void property="y"> 
      <double>132.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>204.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>17.0</double> 
     </void> 
     <void property="x"> 
      <double>443.0</double> 
     </void> 
     <void property="y"> 
      <double>140.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>9.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="0"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>7.0</double> 
     </void> 
     <void property="x"> 
      <double>37.0</double> 
     </void> 
     <void property="y"> 
      <double>139.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>10.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="0"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>8.0</double> 
     </void> 
     <void property="x"> 
      <double>56.0</double> 
     </void> 
     <void property="y"> 
      <double>141.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>8.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="0"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>8.0</double> 
     </void> 
     <void property="x"> 
      <double>432.0</double> 
     </void> 
     <void property="y"> 
      <double>137.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>10.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="0"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>9.0</double> 
     </void> 
     <void property="x"> 
      <double>629.0</double> 
     </void> 
     <void property="y"> 
      <double>127.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>54.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="2"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>358.0</double> 
     </void> 
     <void property="x"> 
      <double>200.0</double> 
     </void> 
     <void property="y"> 
      <double>442.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>22.0</double> 
     </void> 
     <void property="permeability"> 
      <void index="3"> 
       <boolean>true</boolean> 
      </void> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>92.0</double> 
     </void> 
     <void property="x"> 
      <double>327.0</double> 
     </void> 
     <void property="y"> 
      <double>285.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>144.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>13.0</double> 
     </void> 
     <void property="x"> 
      <double>498.0</double> 
     </void> 
     <void property="y"> 
      <double>162.0</double> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.RectangularObstacle$Delegate"> 
     <void property="height"> 
      <double>144.0</double> 
     </void> 
     <void property="visible"> 
      <boolean>false</boolean> 
     </void> 
     <void property="width"> 
      <double>15.0</double> 
     </void> 
     <void property="x"> 
      <double>586.0</double> 
     </void> 
     <void property="y"> 
      <double>161.0</double> 
     </void> 
    </object> 
   </void> 
  </void> 
  <void property="properties"> 
   <void method="put"> 
    <string>filename</string> 
    <string>page4$0.mml</string> 
   </void> 
   <void method="put"> 
    <string>date</string> 
    <object class="java.util.Date"> 
     <long>1229747823000</long> 
    </object> 
   </void> 
   <void method="put"> 
    <string>url</string> 
    <string>/Users/ddamelin/Desktop/ATP/page4$0.mml</string> 
   </void> 
   <void method="put"> 
    <string>size</string> 
    <long>167996</long> 
   </void> 
   <void method="put"> 
    <string>codebase</string> 
    <string>/Users/ddamelin/Desktop/ATP</string> 
   </void> 
  </void> 
  <void property="quantumRule"> 
   <object class="org.concord.mw2d.models.QuantumRule"/> 
  </void> 
  <void property="script"> 
   <string>select atom all;
set heatbath 0;
set vx 0;
set vy 0;
set temperature 800;
set heatbath 800;
select atom none;

define %hatom -1;
define %weakRestraint 1;
define %strongRestraint 1000;
define %mediumRestraint 100;
define %dampingFriction 3;
define %mediumRadius 3;
define %closeRadius 0.6;
define %oxidationState 0;
define %uqOxHeight 3.3;
define %nadhWElecHeight 5.5;
define %succinateHeight 5.4;
define %nadPlusHeight 3.2;
define %fumarateHeight 2.8;
define %cytcOxHeight 3.3;

define %nadhOxidized 0;
define %currentImageSucc 0;
define %currentImageNADH 0;
define %lastImage 0;
define %endNADHox 0;
define %succOxidized 0;
define %endSuccOx 0;
define %grabSuccDelay 0;
define %nadhDelay 0;
define %nadhDelaySet 0;
define %succDelaySet 0;
define %succDelay 0;
define %cytc1Reduced 0;
define %cytc2Reduced 0;
define %cytcDelaySet 0;
define %cytcDelay 0;
define %currentImageC3 0;
define %currentImageC4 0;
define %endCytcRed 0;
define %cytc1Finished 0;
define %cytc2Finished 0;
define %isPartOfMolecule -1;
define %horzDist 0;
define %vertDist 0;

define %krebsArea 45;
define %krebsImage 12;
define %krebsImageTag 2000;
define %krebsAtom 66;
define %krebsAtomImage 0;
define %transMemImage 14;
define %transMemImageTag 4000;
define %krebsAtomTag 1000;
define %atomInsideKrebs 0;
define %complexImage 13;
define %complexImageTag 3000;
define %newNADHx 0;
define %newNADHy 0;
define %newAtom 0; 
define %newImage 0;

set image[%complexImage].custom %complexImageTag;
set image[%krebsImage].custom %krebsImageTag;
set image[%transMemImage].custom %transMemImageTag;

//Oxygen
define %o1x 66.7;
define %o1y 29;
define %o1h1x 65.2;
define %o1h1y 27.9;
define %o1h2x 65.2;
define %o1h2y 30;
define %o2x 69.1;
define %o2y 29;
define %o2h1x 70.6;
define %o2h1y 27.9;
define %o2h2x 70.6;
define %o2h2y 30;
define %o1 -1;
define %o2 -1;
define %oxyMol -1;
define %closeOxy -1;
define %oxyArea 13;
define %grabbingOxy 1;
define %farOxyGrabbed 0;
define %o1grabbed 10;
define %o2grabbed 11;
define %grabbingO1H1 0;
define %grabbingO1H2 0;
define %grabbingO2H1 0;
define %grabbingO2H2 0;
define %whichH 0;
define %oxygenReduced 0;
define %cyt4oxyTag 50;
define %oxyImageAdded 0;
define %readyForElectron 1;
define %cytOxyDelay 0;
define %cytOxyDelaySet 0;
define %endcytOxyDelay 0;

//H1
define %h1x 4.1;
define %h1y 33.2;
define %h1 -1;
define %closeH1 -1;
define %h1Area 6;
define %grabbingH1 1;
define %farH1Grabbed 0;
define %h1Tag 16;

//H2
define %h2x 6.1;
define %h2y 33.3;
define %h2 -1;
define %closeH2 -1;
define %h2Area 7;
define %grabbingH2 1;
define %farH2Grabbed 0;
define %h2Rect 1;
define %h2Tag 17;

//H3
define %h3x 43.7;
define %h3y 34;
define %h3 -1;
define %closeH3 -1;
define %h3Area 8;
define %grabbingH3 1;
define %farH3Grabbed 0;
define %h3Tag 18;

//H4
define %h4x 63.2;
define %h4y 34.4;
define %h4 -1;
define %closeH4 -1;
define %h4Area 10;
define %grabbingH4 1;
define %farH4Grabbed 0;
define %h4Tag -4;
define %h4Tag 19;

//H5
define %h5x 65.2;
define %h5y 34.2;
define %h5 -1;
define %closeH5 -1;
define %h5Area 9;
define %grabbingH5 0;
define %farH5Grabbed 0;
define %h5tag 20;
define %h5DelaySet 0;
define %h5Delay 0;
define %h5FinalGrab 0;

//H6
define %h6x 65.2;
define %h6y 34.2;
define %h6 -1;
define %closeH6 -1;
define %h6Area 9;
define %grabbingH6 0;
define %farH6Grabbed 0;
define %h6tag 21;
define %h6DelaySet 0;
define %h6Delay 0;
define %h6FinalGrab 0;

//H7
define %h7x 70.4;
define %h7y 34.3;
define %h7 -1;
define %close76 -1;
define %h7Area 9;
define %grabbing7 0;
define %farH7Grabbed 0;
define %h7tag 22;
define %h7DelaySet 0;
define %h7Delay 0;
define %h7FinalGrab 0;

//H8
define %h8x 70.4;
define %h8y 34.3;
define %h8 -1;
define %closeH8 -1;
define %h8Area 9;
define %grabbingH8 0;
define %farH8Grabbed 0;
define %h8tag 23;
define %h8DelaySet 0;
define %h8Delay 0;
define %h8FinalGrab 0;

//C1UQ
define %c1UQx 18.8;
define %c1UQy 20;
define %c1UQ -1;
define %closeC1UQ -1;
define %c1UQArea 11;
define %grabbingC1UQ 1;
define %farC1UQGrabbed 0;
define %c1UQTag 100;

//C2UQ
define %c2UQx 28.6;
define %c2UQy 24;
define %c2UQ -1;
define %closeC2UQ -1;
define %c2UQArea 11;
define %grabbingC2UQ 1;
define %farC2UQGrabbed 0;
define %c2UQTag 200;

//C3UQ
define %c3UQx 39.9;
define %c3UQy 20.9;
define %c3UQ -1;
define %closeC3UQ -1;
define %c3UQArea 11;
define %grabbingC3UQ 1;
define %farC3UQGrabbed 0;
define %c3UQTag 300;

//C3cytc
define %c3CytCx 50.5;
define %c3CytCy 12.9;
define %c3Cytc -1;
define %closeC3Cytc -1;
define %c3CytcArea 12;
define %grabbingC3Cytc 1;
define %farC3CytcGrabbed 0;
define %c3CytcTag 400;

//C4cytc
define %c4CytCx 59.3;
define %c4CytCy 13.3;
define %c4Cytc -1;
define %closeC4Cytc -1;
define %c4CytcArea 12;
define %grabbingC4Cytc 1;
define %farC4CytcGrabbed 0;
define %c4CytcTag 500;

//NADH
define %NADHx 9.49;
define %NADHy 34.36;
define %NADH -1;
define %closeNADH -1;
define %NADHArea 13;
define %grabbingNADH 1;
define %farNADHGrabbed 0;
define %atom1 -1;
define %NADHTag 600;
define %nadhNum 1;

//succinate
define %succx 28.6;
define %succy 37.2;
define %succ -1;
define %closeSucc -1;
define %succArea 13;
define %grabbingSucc 1;
define %farSuccGrabbed 0;
define %succTag 700;
define %succNum 1;</string> 
  </void> 
  <void property="tasks"> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>grab h1-h4</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>grabH1-4</string> 
     </void> 
     <void property="script"> 
      <string>if (%grabbingH1);
//print grabH1;
	if (%farH1Grabbed != 1);
		set %h1 nearest(0, %h1x, %h1y, %rectangle[%h1Area].x, %rectangle[%h1Area].y, %rectangle[%h1Area].width, %rectangle[%h1Area].height);
		if (%h1 != -1);
			set %isPartOfMolecule whichMolecule(%h1);
			if (%isPartOfMolecule != -1);
				set %h1 -1;
			endif;
		endif;
		if ((%h1 != -1) and (%h1 != %h2));
			set %farH1Grabbed 1;
			set atom[%h1].friction 0.1;
			set atom[%h1].restraint %weakRestraint;
			set atom[%h1].restraint.x %h1x;
			set atom[%h1].restraint.y %h1y;
			set atom[%h1].custom %h1Tag;
		endif;
	else;			
		set %closeH1 nearest(0, %h1x, %h1y, %closeRadius);
		if (%closeH1 != -1);
			set %isPartOfMolecule whichMolecule(%closeH1);
			if (%isPartOfMolecule != -1);
				set %closeH1 -1;
			endif;
		endif;
		set %horzDist abs(%atom[%h1].rx - %h1x);
		set %vertDist abs(%atom[%h1].ry - %h1y);
		if ((%atom[%h1].ry &lt; %h1y) and (%horzDist &lt; 1) and (%vertDist &lt; 2));
			set %closeH1 %h1;
		endif;
		if ((%closeH1 != -1) and (%closeH1 != %h2));
			if (%closeH1 != %h1);
				set atom[%h1].restraint 0;
				set atom[%h1].friction 0;
				set atom[%h1].custom 0;
				set %h1 %closeH1;
			endif;
			set atom[%h1].friction 0;
			set atom[%h1].restraint %strongRestraint;
			set atom[%h1].restraint.x %h1x;
			set atom[%h1].restraint.y %h1y;
			set atom[%h1].custom %h1Tag;
			set rectangle[%h2Rect].efield -0.2;
			set %grabbingH1 0;
			set %farH1Grabbed 0;
		endif;
	endif;
endif;

if ((%grabbingH2) and (%grabbingH1 != 1));
//print grab h2;
	if (%farH2Grabbed != 1);
		set %h2 nearest(0, %h2x, %h2y, %rectangle[%h2Area].x, %rectangle[%h2Area].y, %rectangle[%h2Area].width, %rectangle[%h2Area].height);
		if (%h2 != -1);
			set %isPartOfMolecule whichMolecule(%h2);
			if (%isPartOfMolecule != -1);
				set %h2 -1;
			endif;
		endif;
		if ((%h2 != -1) and (%h1 != %h2));
			set %farH2Grabbed 1;
			set atom[%h2].friction 0.1;
			set atom[%h2].restraint %weakRestraint;
			set atom[%h2].restraint.x %h2x;
			set atom[%h2].restraint.y %h2y;
			set atom[%h2].custom %h2Tag;
		endif;
	else;			
		set %closeH2 nearest(0, %h2x, %h2y, %closeRadius);
		if (%closeH2 != -1);
			set %isPartOfMolecule whichMolecule(%closeH2);
			if (%isPartOfMolecule != -1);
				set %closeH2 -1;
			endif;
		endif;
		set %horzDist abs(%atom[%h2].rx - %h2x);
		set %vertDist abs(%atom[%h2].ry - %h2y);
		if ((%atom[%h2].ry &lt; %h2y) and (%horzDist &lt; 1) and (%vertDist &lt; 2));
			set %closeH2 %h2;
		endif;
		if ((%closeH2 != -1) and (%h1 != %h2));
			if (%closeH2 != %h2);
				set atom[%h2].restraint 0;
				set atom[%h2].friction 0;
				set atom[%h2].custom 0;
				set %h2 %closeH2;
			endif;
			set atom[%h2].friction 0;
			set atom[%h2].restraint %strongRestraint;
			set atom[%h2].restraint.x %h2x;
			set atom[%h2].restraint.y %h2y;
			set atom[%h2].custom %h2Tag;
			set %grabbingH2 0;
			set %farH2Grabbed 0;
		endif;
	endif;
endif;

if (%grabbingH3);
//print grab h3;
	if (%farH3Grabbed != 1);
		set %h3 nearest(0, %h3x, %h3y, %rectangle[%h3Area].x, %rectangle[%h3Area].y, %rectangle[%h3Area].width, %rectangle[%h3Area].height);
		if (%h3 != -1);
			set %isPartOfMolecule whichMolecule(%h3);
			if (%isPartOfMolecule != -1);
				set %h3 -1;
			endif;
		endif;
		if (%h3 != -1);
			set %farH3Grabbed 1;
			set atom[%h3].friction 0.1;
			set atom[%h3].restraint %weakRestraint;
			set atom[%h3].restraint.x %h3x;
			set atom[%h3].restraint.y %h3y;
			set atom[%h3].custom %h3Tag;
		endif;
	else;			
		set %closeH3 nearest(0, %h3x, %h3y, %closeRadius);
		if (%closeH2 != -1);
			set %isPartOfMolecule whichMolecule(%closeH2);
			if (%isPartOfMolecule != -1);
				set %closeH2 -1;
			endif;
		endif;
		set %horzDist abs(%atom[%h3].rx - %h3x);
		set %vertDist abs(%atom[%h3].ry - %h3y);
		if ((%atom[%h3].ry &lt; %h3y) and (%horzDist &lt; 1) and (%vertDist &lt; 2));
			set %closeH3 %h3;
		endif;
		if (%closeH3 != -1);
			if (%closeH3 != %h3);
				set atom[%h3].restraint 0;
				set atom[%h3].friction 0;
				set atom[%h3].custom 0;
				set %h3 %closeH3;
			endif;
			set atom[%h3].friction 0;
			set atom[%h3].restraint %strongRestraint;
			set atom[%h3].restraint.x %h3x;
			set atom[%h3].restraint.y %h3y;
			set atom[%h3].custom %h3Tag;
			set %grabbingH3 0;
			set %farH3Grabbed 0;
		endif;
	endif;
endif;

if (%grabbingH4);
//print grab h4;
	if (%farH4Grabbed != 1);
		set %h4 nearest(0, %h4x, %h4y, %rectangle[%h4Area].x, %rectangle[%h4Area].y, %rectangle[%h4Area].width, %rectangle[%h4Area].height);
		if (%h4 != -1);
			set %isPartOfMolecule whichMolecule(%h4);
			set %h5 findindexbycustom(ATOM,%h5Tag);
			set %h6 findindexbycustom(ATOM,%h6Tag);
			set %h7 findindexbycustom(ATOM,%h7Tag);
			set %h8 findindexbycustom(ATOM,%h8Tag);
			if ((%isPartOfMolecule != -1) or (%h5 == %h4) or (%h6 == %h4) or (%h7 == %h4) or (%h8 == %h4));
				set %h4 -1;
			endif;
		endif;
		if (%h4 != -1);
			set %farH4Grabbed 1;
			set atom[%h4].friction 0.1;
			set atom[%h4].restraint %weakRestraint;
			set atom[%h4].restraint.x %h4x;
			set atom[%h4].restraint.y %h4y;
			set atom[%h4].custom %h4Tag;
		endif;
	else;			
		set %closeH4 nearest(0, %h4x, %h4y, %closeRadius);
		set %h4 findindexbycustom(ATOM,%h4Tag);
		if (%closeH4 != -1);
			set %isPartOfMolecule whichMolecule(%closeH4);
			set %h5 findindexbycustom(ATOM,%h5Tag);
			set %h6 findindexbycustom(ATOM,%h6Tag);
			set %h7 findindexbycustom(ATOM,%h7Tag);
			set %h8 findindexbycustom(ATOM,%h8Tag);
			if ((%isPartOfMolecule != -1) or (%h5 == %closeH4) or (%h6 == %closeH4) or (%h7 == %closeH4) or (%h8 == %closeH4));
				set %closeH4 -1;
			endif;
		endif;
		set %horzDist abs(%atom[%h4].rx - %h4x);
		set %vertDist abs(%atom[%h4].ry - %h4y);
		if ((%atom[%h4].ry &lt; %h4y) and (%horzDist &lt; 1) and (%vertDist &lt; 2));
			set %closeH4 %h4;
		endif;
		if (%closeH4 != -1);
			if (%closeH4 != %h4);
				set atom[%h4].restraint 0;
				set atom[%h4].friction 0;
				set atom[%h4].custom 0;
				set %h4 %closeH4;
			endif;
			set atom[%h4].friction 0;
			set atom[%h4].restraint %strongRestraint;
			set atom[%h4].restraint.x %h4x;
			set atom[%h4].restraint.y %h4y;
			set atom[%h4].custom %h4Tag;
			set %grabbingH4 0;
			set %farH4Grabbed 0;
		endif;
	endif;
endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>manage UQ</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>grab UQ</string> 
     </void> 
     <void property="script"> 
      <string>if (%grabbingC1UQ);
//print grab c1UQ;
	if (%farC1UQGrabbed != 1);
		set %c1UQ nearest(2, %c1UQx, %c1UQy, %rectangle[%c1UQArea].x, %rectangle[%c1UQArea].y, %rectangle[%c1UQArea].width, %rectangle[%c1UQArea].height);
		if ((%c1UQ != -1) and (%c1UQ != %c2UQ));
			set %oxidationState whichimageisattached(%c1UQ, 0);
			if (%image[%oxidationState].height == %uqOxHeight);
				set %farC1UQGrabbed 1;
				set atom[%c1UQ].friction 0.1;
				set atom[%c1UQ].restraint %weakRestraint;
				set atom[%c1UQ].restraint.x %c1UQx;
				set atom[%c1UQ].restraint.y %c1UQy;
				set atom[%c1UQ].custom %c1UQTag;
			endif;
		endif;
	else;			
		set %closeC1UQ nearest(2, %c1UQx, %c1UQy, %mediumRadius);
		if ((%closeC1UQ != -1) and (%closeC1UQ != %c2UQ));
			set %oxidationState whichimageisattached(%closeC1UQ, 0);
			if (%image[%oxidationState].height == %uqOxHeight);
				set %c1UQ findindexbycustom(ATOM,%c1UQTag);
				if (%closeC1UQ != %c1UQ);
					set atom[%c1UQ].restraint 0;
					set atom[%c1UQ].friction 0;
					set atom[%c1UQ].custom 0;
					set %c1UQ %closeC1UQ;
				endif;
				set atom[%c1UQ].friction %dampingFriction;
				set atom[%c1UQ].restraint %mediumRestraint;
				set atom[%c1UQ].restraint.x %c1UQx;
				set atom[%c1UQ].restraint.y %c1UQy;
				set atom[%c1UQ].custom %c1UQTag;
				set %grabbingC1UQ 0;
				set %farC1UQGrabbed 0;
			endif;
		endif;
	endif;
endif;

if (%grabbingC2UQ);
//print grab c2UQ;
	if (%farC2UQGrabbed != 1);
		set %c2UQ nearest(2, %c2UQx, %c2UQy, %rectangle[%c2UQArea].x, %rectangle[%c2UQArea].y, %rectangle[%c2UQArea].width, %rectangle[%c2UQArea].height);
		if ((%c2UQ != -1) and (%c1UQ != %c2UQ));
			set %oxidationState whichimageisattached(%c2UQ, 0);
			if (%image[%oxidationState].height == %uqOxHeight);
				set %farC2UQGrabbed 1;
				set atom[%c2UQ].friction 0.1;
				set atom[%c2UQ].restraint %weakRestraint;
				set atom[%c2UQ].restraint.x %c2UQx;
				set atom[%c2UQ].restraint.y %c2UQy;
				set atom[%c2UQ].custom %c2UQTag;
			endif;
		endif;
	else;			
		set %closeC2UQ nearest(2, %c2UQx, %c2UQy, %mediumRadius);
		if ((%closeC2UQ != -1) and (%closeC2UQ != %c1UQ));
			set %oxidationState whichimageisattached(%closeC2UQ, 0);
			if (%image[%oxidationState].height == %uqOxHeight);
				set %c2UQ findindexbycustom(ATOM,%c2UQTag);
				if (%closeC2UQ != %c2UQ);
					set atom[%c2UQ].restraint 0;
					set atom[%c2UQ].friction 0;
					set atom[%c2UQ].custom 0;
					set %c2UQ %closeC2UQ;
				endif;
				set atom[%c2UQ].friction %dampingFriction;
				set atom[%c2UQ].restraint %mediumRestraint;
				set atom[%c2UQ].restraint.x %c2UQx;
				set atom[%c2UQ].restraint.y %c2UQy;
				set atom[%c2UQ].custom %c2UQTag;
				set %grabbingC2UQ 0;
				set %farC2UQGrabbed 0;
			endif;
		endif;
	endif;
endif;

if (%grabbingC3UQ);
//print grab c3UQ;
	if (%farC3UQGrabbed != 1);
		set %c3UQ nearest(2, %c3UQx, %c3UQy, %rectangle[%c3UQArea].x, %rectangle[%c3UQArea].y, %rectangle[%c3UQArea].width, %rectangle[%c3UQArea].height);
		if (%c3UQ != -1);
			set %oxidationState whichimageisattached(%c3UQ, 0);
			if (%image[%oxidationState].height != %uqOxHeight);
				set %farC3UQGrabbed 1;
				set atom[%c3UQ].friction 0.1;
				set atom[%c3UQ].restraint %weakRestraint;
				set atom[%c3UQ].restraint.x %c3UQx;
				set atom[%c3UQ].restraint.y %c3UQy;
				set atom[%c3UQ].custom %c3UQTag;
			endif;
		endif;
	else;			
		set %closeC3UQ nearest(2, %c3UQx, %c3UQy, %mediumRadius);
		if (%closeC3UQ != -1);
			set %oxidationState whichimageisattached(%closeC3UQ, 0);
			if (%image[%oxidationState].height != %uqOxHeight);
				set %c3UQ findindexbycustom(ATOM,%c3UQTag);
				if (%closeC3UQ != %c3UQ);
					set atom[%c3UQ].restraint 0;
					set atom[%c3UQ].friction 0;
					set atom[%c3UQ].custom 0;
					set %c3UQ %closeC3UQ;
				endif;
				set atom[%c3UQ].friction %dampingFriction;
				set atom[%c3UQ].restraint %mediumRestraint;
				set atom[%c3UQ].restraint.x %c3UQx;
				set atom[%c3UQ].restraint.y %c3UQy;
				set atom[%c3UQ].custom %c3UQTag;
				set %grabbingC3UQ 0;
				set %farC3UQGrabbed 0;
			endif;
		endif;
	endif;
endif;
</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>grab cytc</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>grab cytc</string> 
     </void> 
     <void property="script"> 
      <string>if (%grabbingC3Cytc);
//print grab C3cytc;
	if (%farC3CytcGrabbed != 1);
		set %c3Cytc nearest(2, %c3Cytcx, %c3Cytcy, %rectangle[%c3CytcArea].x, %rectangle[%c3CytcArea].y, %rectangle[%c3CytcArea].width, %rectangle[%c3CytcArea].height);
		if (%c3Cytc != -1);
			set %oxidationState whichimageisattached(%c3Cytc, 0);
			if (%image[%oxidationState].height == %cytcOxHeight);
				set %farC3CytcGrabbed 1;
				set atom[%c3Cytc].friction 0.1;
				set atom[%c3Cytc].restraint %weakRestraint;
				set atom[%c3Cytc].restraint.x %c3Cytcx;
				set atom[%c3Cytc].restraint.y %c3Cytcy;
				set atom[%c3Cytc].custom %c3CytcTag;
			endif;
		endif;
	else;			
		set %closeC3Cytc nearest(2, %c3Cytcx, %c3Cytcy, %mediumRadius);
		if (%closeC3Cytc != -1);
			set %oxidationState whichimageisattached(%closeC3Cytc, 0);
			if (%image[%oxidationState].height == %cytcOxHeight);
				set %c3Cytc findindexbycustom(ATOM,%c3CytcTag);
				if (%closeC3Cytc != %c3Cytc);
					set atom[%c3Cytc].restraint 0;
					set atom[%c3Cytc].friction 0;
					set atom[%c3Cytc].custom 0;
					set %c3Cytc %closeC3Cytc;
				endif;
				set atom[%c3Cytc].friction %dampingFriction;
				set atom[%c3Cytc].restraint %mediumRestraint;
				set atom[%c3Cytc].restraint.x %c3Cytcx;
				set atom[%c3Cytc].restraint.y %c3Cytcy;
				set atom[%c3Cytc].custom %c3CytcTag;
				set %grabbingC3Cytc 0;
				set %farC3CytcGrabbed 0;
			endif;
		endif;
	endif;
endif;

if (%grabbingC4Cytc);
//print grab C4cytc;
	if (%farC4CytcGrabbed != 1);
		set %c4Cytc nearest(2, %c4Cytcx, %c4Cytcy, %rectangle[%c4CytcArea].x, %rectangle[%c4CytcArea].y, %rectangle[%c4CytcArea].width, %rectangle[%c4CytcArea].height);
		if (%c4Cytc != -1);
			set %oxidationState whichimageisattached(%c4Cytc, 0);
			if (%image[%oxidationState].height != %cytcOxHeight);
				set %farC4CytcGrabbed 1;
				set atom[%c4Cytc].friction 0.1;
				set atom[%c4Cytc].restraint %weakRestraint;
				set atom[%c4Cytc].restraint.x %c4Cytcx;
				set atom[%c4Cytc].restraint.y %c4Cytcy;
				set atom[%c4Cytc].custom %c4CytcTag;
			endif;
		endif;
	else;			
		set %closeC4Cytc nearest(2, %c4Cytcx, %c4Cytcy, %mediumRadius);
		if (%closeC4Cytc != -1);
			set %oxidationState whichimageisattached(%closeC4Cytc, 0);
			if (%image[%oxidationState].height != %cytcOxHeight);
				set %c4Cytc findindexbycustom(ATOM,%c4CytcTag);
				if (%closeC4Cytc != %c4Cytc);
					set atom[%c4Cytc].restraint 0;
					set atom[%c4Cytc].friction 0;
					set atom[%c4Cytc].custom 0;
					set %c4Cytc %closeC4Cytc;
				endif;
				set atom[%c4Cytc].friction %dampingFriction;
				set atom[%c4Cytc].restraint %mediumRestraint;
				set atom[%c4Cytc].restraint.x %c4Cytcx;
				set atom[%c4Cytc].restraint.y %c4Cytcy;
				set atom[%c4Cytc].custom %c4CytcTag;
				set %grabbingC4Cytc 0;
				set %farC4CytcGrabbed 0;
			endif;
		endif;
	endif;
endif;
</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>manage nadh</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>grab NADH</string> 
     </void> 
     <void property="script"> 
      <string>if (%grabbingNADH);
//print grab NADH;
	if (%farNADHGrabbed != 1);
		set %NADH nearest(2, %NADHx, %NADHy, %rectangle[%NADHArea].x, %rectangle[%NADHArea].y, %rectangle[%NADHArea].width, %rectangle[%NADHArea].height);
		if (%NADH != -1);
			set %oxidationState whichimageisattached(%NADH, 0);
			if (%image[%oxidationState].height == %nadhWElecHeight);
				set %farNADHGrabbed 1;
				set atom[%NADH].friction 0.1;
				set atom[%NADH].restraint %weakRestraint;
				set atom[%NADH].restraint.x %NADHx;
				set atom[%NADH].restraint.y %NADHy;
				set atom[%NADH].custom %NADHTag;
			endif;
		endif;
	else;			
		set %closeNADH nearest(2,%NADHx, %NADHy,%mediumRadius);
		if (%closeNADH != -1);
			set %oxidationState whichimageisattached(%closeNADH, 0);
			if (%image[%oxidationState].height == %nadhWElecHeight);
				set %NADH findindexbycustom(ATOM,%NADHTag);
				if (%closeNADH != %NADH);
					set atom[%NADH].restraint 0;
					set atom[%NADH].friction 0;
					set atom[%NADH].custom 0;
					set %NADH %closeNADH;
				endif;
				set atom[%NADH].friction %dampingFriction;
				set atom[%NADH].restraint %mediumRestraint;
				set atom[%NADH].restraint.x %NADHx;
				set atom[%NADH].restraint.y %NADHy;
				set atom[%NADH].custom %NADHTag;
				set %grabbingNADH 0;
				set %farNADHGrabbed 0;
			endif;
		endif;
	endif;
endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>manag succinate</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>grab succ</string> 
     </void> 
     <void property="script"> 
      <string>if (%grabbingSucc);
//print grab succ;
	if (%farSuccGrabbed != 1);
		set %succ nearest(2, %succx, %succy, %rectangle[%succArea].x, %rectangle[%succArea].y, %rectangle[%succArea].width, %rectangle[%succArea].height);
		if (%succ != -1);
			set %oxidationState whichimageisattached(%succ, 0);
			if (%image[%oxidationState].height == %succinateHeight);
				set %farSuccGrabbed 1;
				set atom[%succ].friction 0.1;
				set atom[%succ].restraint %weakRestraint;
				set atom[%succ].restraint.x %succx;
				set atom[%succ].restraint.y %succy;
				set atom[%succ].custom %succTag;
			endif;
		endif;
	else;			
		set %closeSucc nearest(2, %succx, %succy, %mediumRadius);
		if (%closeSucc != -1);
			set %oxidationState whichimageisattached(%closeSucc, 0);
			if (%image[%oxidationState].height == %succinateHeight);
				set %succ findindexbycustom(ATOM,%succTag);
				if (%closeSucc != %succ);
					set atom[%succ].restraint 0;
					set atom[%succ].friction 0;
					set atom[%succ].custom 0;
					set %succ %closeSucc;
				endif;
				set atom[%succ].friction %dampingFriction;
				set atom[%succ].restraint %mediumRestraint;
				set atom[%succ].restraint.x %succx;
				set atom[%succ].restraint.y %succy;
				set atom[%succ].custom %succTag;
				set %grabbingSucc 0;
				set %farSuccGrabbed 0;
			endif;
		endif;
	endif;
endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>oxidize NAHD</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>oxidize NADH</string> 
     </void> 
     <void property="script"> 
      <string>if ((%grabbingH1 == 0) and (%grabbingH2 == 0) and (%grabbingNADH == 0) and (%grabbingC1UQ == 0) and (%nadhOxidized == 0));
//print oxidize nadh;
	if ((%nadhDelaySet) and (%model_time &gt; %nadhDelay));
		set %h1 findindexbycustom(ATOM,%h1Tag);
		set %h2 findindexbycustom(ATOM,%h2Tag);
		set atom[%h1].restraint 0;
		set atom[%h1].custom 0;
		set atom[%h2].restraint 0;
		set atom[%h2].custom 0;
		set %NADH findindexbycustom(ATOM,%NADHTag);
		set %currentImageNADH whichimageisattached(%NADH, 0);
		select image %currentImageNADH;
		remove;
		add image nadPlus.png atomno=%NADH;
		set %c1UQ findindexbycustom(ATOM,%c1UQTag);
//		set %currentImageNADH whichimageisattached(%c1UQ, 0);
		add image nadhOx.gif atomno=%c1UQ;
		set %lastImage %number_of_images-1;
		set image[%lastImage].loop 1;
		set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
		set image[%krebsImage].layer FRONT;
		set %complexImage findindexbycustom(IMAGE, %complexImageTag);
		set image[%complexImage].layer FRONT;
		set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
		set image[%transMemImage].layer FRONT;
		set %nadhOxidized 1;
		set %endNADHox &quot;%model_time+2600&quot;;
	else;
		if (%nadhDelaySet == 0);
			set %nadhDelay %model_time+500;
			set %nadhDelaySet 1;
		endif;
	endif;
endif;

If ((%nadhOxidized) and (%model_time &gt; %endNADHox));
	set %NADH findindexbycustom(ATOM,%NADHTag);
	set %c1UQ findindexbycustom(ATOM,%c1UQTag);
	set %currentImageNADH whichimageisattached(%c1UQ, 0);
	select image %currentImageNADH;
	remove;
	set %nadhOxidized 0;
	set %grabbingH1 1;
	set %grabbingH2 1;
	set %grabbingNADH 1;
	set %grabbingC1UQ 1;
	set %nadhDelaySet 0;
	set atom[%c1UQ].restraint 0;
	set atom[%c1UQ].friction 0;
	set atom[%c1UQ].vx 100;
	set atom[%c1UQ].custom 0;
	set atom[%NADH].restraint 0;
	set atom[%NADH].friction 0;
	set atom[%NADH].custom 0;
	set atom[%NADH].vx rand()*100;
	set atom[%NADH].vy rand()*100+100;
	set rectangle[%h2Rect].efield 0.2;
	set %nadhNum %nadhNum-1;
endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>oxidize succinate</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>oxidize Succinate</string> 
     </void> 
     <void property="script"> 
      <string>if ((%grabbingSucc == 0) and (%grabbingC2UQ == 0) and (%succOxidized == 0));
//print oxidize succ;
	if ((%succDelaySet) and (%model_time &gt; %succDelay));
		set %succ findindexbycustom(ATOM, %succTag);
		set %currentImageSucc whichimageisattached(%succ, 0);
		select image %currentImageSucc;
		remove;
		add image fumarate.png atomno=%succ;
		set %c2UQ findindexbycustom(ATOM, %c2UQTag);
		add image succinateOx.gif atomno=%c2UQ;
		set %lastImage %number_of_images-1;
		set image[%lastImage].loop 1;
		set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
		set image[%krebsImage].layer FRONT;
		set %complexImage findindexbycustom(IMAGE, %complexImageTag);
		set image[%complexImage].layer FRONT;
		set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
		set image[%transMemImage].layer FRONT;
		set %succOxidized 1;
		set %endSuccOx &quot;%model_time+2200&quot;;
	else;
		if (%succDelaySet == 0);
			set %succDelay %model_time+500;
			set %succDelaySet 1;
		endif;
	endif;
endif;

If ((%succOxidized) and (%model_time &gt; %endSuccOx));
	set %succ findindexbycustom(ATOM, %succTag);
	set %c2UQ findindexbycustom(ATOM, %c2UQTag);
	set %currentImageSucc whichimageisattached(%c2UQ, 0);
	select image %currentImageSucc;
	remove;
	set %succOxidized 0;
	set %grabbingSucc 1;
	set %grabbingC2UQ 1;
	set %succDelaySet 0;
	set atom[%c2UQ].restraint 0;
	set atom[%c2UQ].friction 0;
	set atom[%c2UQ].custom 0;
	set atom[%c2UQ].vx 100;
	set atom[%succ].restraint 0;
	set atom[%succ].friction 0;
	set atom[%succ].custom 0;
	set atom[%succ].vx rand()*100;
	set atom[%succ].vy 100+rand()*100;
	set %succNum %succNum-1;
endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>oxidize UQ</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>oxidize UQ</string> 
     </void> 
     <void property="script"> 
      <string>if ((%grabbingC3UQ == 0) and (%grabbingC3Cytc == 0) and (%grabbingH3 == 0) and (%cytc1Reduced == 0) and (%cytc1Finished == 0));
//print oxidize c3UQ step1;
	if ((%cytcDelaySet) and (%model_time &gt; %cytcDelay));
		set %h3 findindexbycustom(ATOM,%h3Tag);
		set atom[%h3].restraint 0;
		set atom[%h3].custom 0;
		set %c3UQ findindexbycustom(ATOM,%c3UQTag);
		set %currentImageC3 whichimageisattached(%c3UQ, 0);
		select image %currentImageC3;
		remove;
		add image uq1Elec.gif atomno=%c3UQ;
		set %c3Cytc findindexbycustom(ATOM,%c3CytcTag);
		set %currentImageC3 whichimageisattached(%c3Cytc, 0);
		add image cytcRed1.gif atomno=%c3Cytc;
		set %lastImage %number_of_images-1;
		set image[%lastImage].loop 1;
		set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
		set image[%krebsImage].layer FRONT;
		set %complexImage findindexbycustom(IMAGE, %complexImageTag);
		set image[%complexImage].layer FRONT;
		set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
		set image[%transMemImage].layer FRONT;
		set %cytc1Reduced 1;
		set %endCytcRed &quot;%model_time+1500&quot;;
	else;
		if (%cytcDelaySet == 0);
			set %cytcDelay %model_time+500;
			set %cytcDelaySet 1;
		endif;
	endif;
endif;

If ((%cytc1Reduced) and (%model_time &gt; %endCytcRed));
	set %cytc1Reduced 0;
	set %cytc1Finished 1;
	set %cytcDelaySet 0;
	set %c3Cytc findindexbycustom(ATOM,%c3CytcTag);
	set %currentImageC3 whichimageisattached(%c3Cytc, 0);
	select image %currentImageC3;
	remove;
	set %grabbingC3Cytc 1;
	set %grabbingH3 1;
	set atom[%c3Cytc].restraint 0;
	set atom[%c3Cytc].friction 0;
	set atom[%c3Cytc].vy -100-rand()*-100;
	set atom[%c3Cytc].custom 0;
endif;

if ((%grabbingC3UQ == 0) and (%grabbingC3Cytc == 0) and (%grabbingH3 == 0) and (%cytc1Finished == 1) and (%cytc2Reduced == 0) and (%cytc2Finished == 0));
//print oxidize c3UQ step2;
	if ((%cytcDelaySet) and (%model_time &gt; %cytcDelay));
		set %h3 findindexbycustom(ATOM,%h3Tag);
		set atom[%h3].restraint 0;
		set atom[%h3].custom 0;
		set %c3UQ findindexbycustom(ATOM,%c3UQTag);
		set %currentImageC3 whichimageisattached(%c3UQ, 0);
		select image %currentImageC3;
		remove;
		add image uqPlain.png atomno=%c3UQ;
		set %c3Cytc findindexbycustom(ATOM,%c3CytcTag);
		set %currentImageC3 whichimageisattached(%c3Cytc, 0);
		add image cytcRed2.gif atomno=%c3Cytc;
		set %lastImage %number_of_images-1;
		set image[%lastImage].loop 1;
		set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
		set image[%krebsImage].layer FRONT;
		set %complexImage findindexbycustom(IMAGE, %complexImageTag);
		set image[%complexImage].layer FRONT;
		set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
		set image[%transMemImage].layer FRONT;
		set %cytc2Reduced 1;
		set %endCytcRed &quot;%model_time+1500&quot;;
	else;
		if (%cytcDelaySet == 0);
			set %cytcDelay %model_time+500;
			set %cytcDelaySet 1;
		endif;
	endif;
endif;

If ((%cytc2Reduced) and (%model_time &gt; %endCytcRed));
	set %cytc2Reduced 0;
	set %cytc2Finished 0;
	set %cytc1Finished 0;
	set %cytcDelaySet 0;
	set %c3Cytc findindexbycustom(ATOM,%c3CytcTag);
	set %currentImageC3 whichimageisattached(%c3Cytc, 0);
	select image %currentImageC3;
	remove;
	set %grabbingC3Cytc 1;
	set %grabbingH3 1;
	set %grabbingC3UQ 1;
	set atom[%c3Cytc].restraint 0;
	set atom[%c3Cytc].friction 0;
	set atom[%c3Cytc].vy -100-rand()*-100;
	set atom[%c3Cytc].custom 0;
	set %c3UQ findindexbycustom(ATOM,%c3UQTag);
	set atom[%c3UQ].restraint 0;
	set atom[%c3UQ].friction 0;
	set atom[%c3UQ].custom 0;
	set atom[%c3UQ].vx rand()*-100;
endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>add NADH to system</string> 
     </void> 
     <void property="interval"> 
      <int>10000</int> 
     </void> 
     <void property="name"> 
      <string>add NADH</string> 
     </void> 
     <void property="script"> 
      <string>set %newNADHx rand()*(%obstacle[%krebsArea].width-2)+%obstacle[%krebsArea].x+1;
set %newNADHy rand()*(%obstacle[%krebsArea].height-2)+%obstacle[%krebsArea].y+1;
set %openArea nearest(2,%newNADHx, %newNADHy, 2);
if ((%openArea == -1) and (%nadhNum &lt; 8));
	set %nadhNum %nadhNum+1;
	add atom 2 (%newNADHx, %newNADHy);
	set %newAtom %number_of_atoms -1;
	set atom[%newAtom].visible off;
	add image nadh.png atomno=%newAtom;
	set image[&quot;%number_of_images - 1&quot;].layer IN_FRONT_OF_PARTICLES;
	set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
	set image[%krebsImage].layer FRONT;
	set %complexImage findindexbycustom(IMAGE, %complexImageTag);
	set image[%complexImage].layer FRONT;
	set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
	set image[%transMemImage].layer FRONT;
endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>add succinate</string> 
     </void> 
     <void property="interval"> 
      <int>22000</int> 
     </void> 
     <void property="name"> 
      <string>add succinate</string> 
     </void> 
     <void property="script"> 
      <string>set %newNADHx rand()*(%obstacle[%krebsArea].width-2)+%obstacle[%krebsArea].x+1;
set %newNADHy rand()*(%obstacle[%krebsArea].height-2)+%obstacle[%krebsArea].y+1;
set %openArea nearest(2,%newNADHx, %newNADHy, 2);
if ((%openArea == -1) and (%succNum &lt; 2));
	set %succNum %succNum+1;	
	add atom 2 (%newNADHx, %newNADHy);
	set %newAtom %number_of_atoms -1;
	set atom[%newAtom].visible off;
	add image succinate.png atomno=%newAtom;
	set image[&quot;%number_of_images - 1&quot;].layer IN_FRONT_OF_PARTICLES;
	set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
	set image[%krebsImage].layer FRONT;
	set %complexImage findindexbycustom(IMAGE, %complexImageTag);
	set image[%complexImage].layer FRONT;
	set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
	set image[%transMemImage].layer FRONT;
endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>remove nad+ and fumerate</string> 
     </void> 
     <void property="interval"> 
      <int>500</int> 
     </void> 
     <void property="name"> 
      <string>back to krebs</string> 
     </void> 
     <void property="script"> 
      <string>//if (0);

set %atomInsideKrebs nearest(2, &quot;%obstacle[%krebsArea].x+(%obstacle[%krebsArea].width/2)&quot;, &quot;%obstacle[%krebsArea].y+%obstacle[%krebsArea].height&quot;, &quot;%obstacle[%krebsArea].x+1&quot;, &quot;%obstacle[%krebsArea].y+1&quot;, &quot;%obstacle[%krebsArea].width-2&quot;, %obstacle[%krebsArea].height);
If (%atomInsideKrebs != -1);
	set %krebsAtomImage whichimageisattached(%atomInsideKrebs,0);
	if ((%image[%krebsAtomImage].height == %nadPlusHeight) or (%image[%krebsAtomImage].height == %fumarateHeight));
		select atom %atomInsideKrebs;
		remove;
	endif;
endif;	

//endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>grab oxygen</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>grab oxygen</string> 
     </void> 
     <void property="script"> 
      <string>if (%grabbingOxy);
//print grab oxygen;
	if (%farOxyGrabbed != 1);
		set %o1 nearest(3, %o1x, %o1y, %rectangle[%oxyArea].x, %rectangle[%oxyArea].y, %rectangle[%oxyArea].width, %rectangle[%oxyArea].height);
		if (%o1 != -1);
			set %oxyMol whichMolecule(%o1);
			set %atom1 atomOfMolecule(%oxyMol,2);
			if (%atom1 == -1);
				set %atom1 atomOfMolecule(%oxyMol,1);
				if (%atom1 == %o1);
					set %o2 atomOfMolecule(%oxyMol,0);
				else;
					set %o2 atomOfMolecule(%oxyMol,1);
				endif;
				set %farOxyGrabbed 1;
				set atom[%o1].friction 0.1;
				set atom[%o1].restraint %weakRestraint;
				set atom[%o1].restraint.x %o1x;
				set atom[%o1].restraint.y %o1y;
				set atom[%o1].custom %o1grabbed;
				set atom[%o2].friction 0.1;
				set atom[%o2].restraint %weakRestraint;
				set atom[%o2].restraint.x %o2x;
				set atom[%o2].restraint.y %o2y;
				set atom[%o2].custom %o2grabbed;
			endif;
		endif;
	else;			
		set %closeOxy nearest(3,%o1x, %o1y,%closeRadius);
		if (%closeOxy != -1);
			set %oxyMol whichMolecule(%closeOxy);
			set %atom1 atomOfMolecule(%oxyMol,2);
			if (%atom1 == -1);
				set %o1 findindexbycustom(ATOM,%o1grabbed);
				if (%closeOxy != %o1);
					set %o2 findindexbycustom(ATOM,%o2grabbed);
					set atom[%o1].friction 0;
					set atom[%o1].restraint 0;
					set atom[%o1].custom 0;
					set atom[%o2].friction 0;
					set atom[%o2].restraint 0;
					set atom[%o2].custom 0;
				endif;
				set %o1 %closeOxy;
				set %atom1 atomOfMolecule(%oxyMol,1);
				if (%atom1 == %o1);
					set %o2 atomOfMolecule(%oxyMol,0);
				else;
					set %o2 atomOfMolecule(%oxyMol,1);
				endif;
				set atom[%o1].restraint %mediumRestraint;
				set atom[%o1].friction %dampingFriction;
				set atom[%o1].restraint.x %o1x;
				set atom[%o1].restraint.y %o1y;
				set atom[%o1].custom %o1grabbed;
				set atom[%o2].restraint %mediumRestraint;
				set atom[%o2].friction %dampingFriction;
				set atom[%o2].custom %o2grabbed;
				set atom[%o2].restraint.x %o2x;
				set atom[%o2].restraint.y %o2y;
				set %oxyBond whichrbond(%o1,%o2);
				select rbond %oxyBond;
				remove;
				set %grabbingOxy 0;
				set %farOxyGrabbed 0;
			endif;
		endif;
	endif;
endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>grab hydrogens for first water</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>grab water1 H</string> 
     </void> 
     <void property="script"> 
      <string>if ((%oxygenReduced) and (%grabbingH4 == 0));
	if (%grabbingO1H1);
		if (%grabbingH5);
			if (%farH5Grabbed != 1);
				set %h5 nearest(0, %h5x, %h5y, %rectangle[%h5Area].x, %rectangle[%h5Area].y, %rectangle[%h5Area].width,%rectangle[%h5Area].height);
				if (%h5 != -1);
					set %isPartOfMolecule whichMolecule(%h5);
					set %h4 findindexbycustom(ATOM,%h4Tag);
					if ((%isPartOfMolecule != -1) or (%h5 == %h4));
						set %h5 -1;
					endif;
				endif;
				if (%h5 != -1);
					set %farH5Grabbed 1;
					set atom[%h5].friction 0.1;
					set atom[%h5].restraint %weakRestraint+0.3;
					set atom[%h5].restraint.x %h5x;
					set atom[%h5].restraint.y %h5y;
					set atom[%h5].custom %h5tag;
				endif;
			else;			
				set %closeH5 nearest(0, %h5x, %h5y, %closeRadius);
				if (%closeH5 != -1);
					set %isPartOfMolecule whichMolecule(%closeH5);
					set %h4 findindexbycustom(ATOM,%h4Tag);
					if ((%isPartOfMolecule != -1) or (%closeH5 == %h4));
						set %closeH5 -1;
					endif;
				endif;
				set %h5 findindexbycustom(ATOM,%h5tag);
				set %horzDist abs(%atom[%h5].rx - %h5x);
				if ((%atom[%h5].ry &lt; %h5y) and (%horzDist &lt; 1));
					set %closeH5 %h5;
				endif;
				if (%closeH5 != -1);
					if (%closeH5 != %h5);
						set atom[%h5].restraint 0;
						set atom[%h5].friction 0;
						set atom[%h5].custom 0;
						set atom[%h5].charge 0.05;
						set %h5 %closeH5;
					endif;
					set atom[%h5].friction 0;
					set atom[%h5].charge -0.05;
					set atom[%h5].restraint %strongRestraint;
					set atom[%h5].restraint.x %h5x;
					set atom[%h5].restraint.y %h5y;
					set atom[%h5].custom %h5Tag;
					set %grabbingH5 0;
					set %farH5Grabbed 0;
				endif;
			endif;
		endif;

		if ((%grabbingH5 == 0) and (%h5FinalGrab == 0));
			if ((%h5DelaySet) and (%model_time &gt; %h5Delay));
				set %h5 findindexbycustom(ATOM,%h5tag);
				set atom[%h5].restraint 0;
				set atom[%h5].vx 0;
				set atom[%h5].vy 0;
				set %h5FinalGrab 1;
				set %h5DelaySet 0;
			else;
				if (%h5DelaySet == 0);
					set %h5Delay %model_time+100;
					set %h5DelaySet 1;
				endif;
			endif;
		endif;

		if (%h5FinalGrab == 1);
			set %h5 findindexbycustom(ATOM,%h5tag);
			set %o1 findindexbycustom(ATOM,%o1grabbed);
			if (%atom[%h5].ry &lt; %o1h1y);
				set atom[%h5].charge 0;
				set atom[%h5].friction %dampingFriction;
				set atom[%h5].restraint %strongRestraint;
				set atom[%h5].restraint.x %o1h1x;
				set atom[%h5].restraint.y %o1h1y;
				rbond %h5 %o1 0.2;
				set %lastImage findindexbycustom(IMAGE,%cyt4oxyTag);
				select image %lastimage;
				remove;
				add image o1h1.png (0,0);
				attach image &quot;%number_of_images-1&quot; to bond &quot;%number_of_rbonds-1&quot;;
				set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
				set image[%krebsImage].layer FRONT;
				set %complexImage findindexbycustom(IMAGE, %complexImageTag);
				set image[%complexImage].layer FRONT;
				set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
				set image[%transMemImage].layer FRONT;
				set %h5FinalGrab 0;
				set %grabbingO1H1 0;
				set %readyForElectron 1;
				set %oxygenReduced 0;
			endif;
		endif;
	endif;

	if (%grabbingO1H2);
		if (%grabbingH6);
			if (%farH6Grabbed != 1);
				set %h6 nearest(0, %h6x, %h6y, %rectangle[%h6Area].x, %rectangle[%h6Area].y, %rectangle[%h6Area].width, %rectangle[%h6Area].height);
				if (%h6 != -1);
					set %isPartOfMolecule whichMolecule(%h6);
					set %h4 findindexbycustom(ATOM,%h4Tag);
					if ((%isPartOfMolecule != -1) or (%h6 == %h4));
						set %h6 -1;
					endif;
				endif;
				if (%h6 != -1);
					set %farH6Grabbed 1;
					set atom[%h6].friction 0.1;
					set atom[%h6].restraint %weakRestraint+0.3;
					set atom[%h6].restraint.x %h6x;
					set atom[%h6].restraint.y %h6y;
					set atom[%h6].custom %h6tag;
				endif;
			else;			
				set %closeH6 nearest(0, %h6x, %h6y, %closeRadius);
				if (%closeH6 != -1);
					set %isPartOfMolecule whichMolecule(%closeH6);
					set %h4 findindexbycustom(ATOM,%h4Tag);
					if ((%isPartOfMolecule != -1) or (%closeH6 == %h4));
						set %closeH6 -1;
					endif;
				endif;
				set %h6 findindexbycustom(ATOM,%h6tag);
				set %horzDist abs(%atom[%h6].rx - %h6x);
				if ((%atom[%h6].ry &lt; %h6y) and (%horzDist &lt; 1));
					set %closeH6 %h6;
				endif;
				if (%closeH6 != -1);
					if (%closeH6 != %h6);
						set atom[%h6].restraint 0;
						set atom[%h6].friction 0;
						set atom[%h6].custom 0;
						set atom[%h6].charge 0.05;
						set %h6 %closeH6;
					endif;
					set atom[%h6].friction 0;
					set atom[%h6].charge -0.05;
					set atom[%h6].restraint %strongRestraint;
					set atom[%h6].restraint.x %h6x;
					set atom[%h6].restraint.y %h6y;
					set atom[%h6].custom %h6Tag;
					set %grabbingH6 0;
					set %farH6Grabbed 0;
				endif;
			endif;
		endif;

		if ((%grabbingH6 == 0) and (%h6FinalGrab == 0));
			if ((%h6DelaySet) and (%model_time &gt; %h6Delay));
				set %h6 findindexbycustom(ATOM,%h6tag);
				set atom[%h6].restraint 0;
				set atom[%h6].vx 0;
				set atom[%h6].vy 0;
				set %h6FinalGrab 1;
				set %h6DelaySet 0;
			else;
				if (%h6DelaySet == 0);
					set %h6Delay %model_time+100;
					set %h6DelaySet 1;
				endif;
			endif;
		endif;

		if (%h6FinalGrab == 1);
			set %h6 findindexbycustom(ATOM,%h6tag);
			if (%atom[%h6].ry &lt; %o1h2y);
				set %o1 findindexbycustom(ATOM,%o1grabbed);
				set %h5 findindexbycustom(ATOM,%h5tag);
				set atom[%h6].rx %o1h2x;
				set atom[%h6].ry %o1h2y;
				set atom[%h6].charge 0.05;
				set atom[%h6].friction 0;
				set atom[%h6].restraint 0;
				set atom[%h6].custom 0;
				rbond %h6 %o1 0.2;
				set %lastImage findindexbycustom(IMAGE,%cyt4oxyTag);
				select image %lastimage;
				remove;
				add image o1h2.png (0,0);
				attach image &quot;%number_of_images-1&quot; to bond &quot;%number_of_rbonds-1&quot;;
				set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
				set image[%krebsImage].layer FRONT;
				set %complexImage findindexbycustom(IMAGE, %complexImageTag);
				set image[%complexImage].layer FRONT;
				set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
				set image[%transMemImage].layer FRONT;
				abond %h6 %o1 %h5 2;
				set abond[&quot;%number_of_abonds-1&quot;].bondangle 104.5*pi/180;
				select abond none;
				set atom[%h5].charge 0.05;
				set atom[%h5].friction 0;
				set atom[%h5].restraint 0;
				set atom[%o1].restraint 0;
				set atom[%o1].friction 0;
				set atom[%o1].custom 0;
				set %h6FinalGrab 0;
				set %grabbingO1H2 0;
				set %readyForElectron 1;
				set %oxygenReduced 0;
			endif;
		endif;
	endif;

	if (%grabbingO2H1);
		if (%grabbingH7);
			if (%farH7Grabbed != 1);
				set %h7 nearest(0, %h7x, %h7y, %rectangle[%h7Area].x, %rectangle[%h7Area].y, %rectangle[%h7Area].width, %rectangle[%h7Area].height);
				if (%h7 != -1);
					set %isPartOfMolecule whichMolecule(%h7);
					set %h4 findindexbycustom(ATOM,%h4Tag);
					if ((%isPartOfMolecule != -1) or (%h7 == %h4));
						set %h7 -1;
					endif;
				endif;
				if (%h7 != -1);
					set %farH7Grabbed 1;
					set atom[%h7].friction 0.1;
					set atom[%h7].restraint %weakRestraint+0.3;
					set atom[%h7].restraint.x %h7x;
					set atom[%h7].restraint.y %h7y;
					set atom[%h7].custom %h7tag;
				endif;
			else;			
				set %closeH7 nearest(0, %h7x, %h7y, %closeRadius);
				if (%closeH7 != -1);
					set %isPartOfMolecule whichMolecule(%closeH7);
					set %h4 findindexbycustom(ATOM,%h4Tag);
					if ((%isPartOfMolecule != -1) or (%closeH7 == %h4));
						set %closeH7 -1;
					endif;
				endif;
				set %h7 findindexbycustom(ATOM,%h7tag);
				set %horzDist abs(%atom[%h7].rx - %h7x);
				if ((%atom[%h7].ry &lt; %h7y) and (%horzDist &lt; 1));
					set %closeH7 %h7;
				endif;
				if (%closeH7 != -1);
					if (%closeH7 != %h7);
						set atom[%h7].restraint 0;
						set atom[%h7].friction 0;
						set atom[%h7].custom 0;
						set atom[%h7].charge 0.05;
						set %h7 %closeH7;
					endif;
					set atom[%h7].friction 0;
					set atom[%h7].charge -0.05;
					set atom[%h7].restraint %strongRestraint;
					set atom[%h7].restraint.x %h7x;
					set atom[%h7].restraint.y %h7y;
					set atom[%h7].custom %h7Tag;
					set %grabbingH7 0;
					set %farH7Grabbed 0;
				endif;
			endif;
		endif;

		if ((%grabbingH7 == 0) and (%h7FinalGrab == 0));
			if ((%h7DelaySet) and (%model_time &gt; %h7Delay));
				set %h7 findindexbycustom(ATOM,%h7tag);
				set atom[%h7].restraint 0;
				set atom[%h7].vx 0;
				set atom[%h7].vy 0;
				set %h7FinalGrab 1;
				set %h7DelaySet 0;
			else;
				if (%h7DelaySet == 0);
					set %h7Delay %model_time+100;
					set %h7DelaySet 1;
				endif;
			endif;
		endif;

		if (%h7FinalGrab == 1);
			set %h7 findindexbycustom(ATOM,%h7tag);
			set %o2 findindexbycustom(ATOM,%o2grabbed);
			if (%atom[%h7].ry &lt; %o2h1y);
				set atom[%h7].charge 0;
				set atom[%h7].friction %dampingFriction;
				set atom[%h7].restraint %strongRestraint;
				set atom[%h7].restraint.x %o2h1x;
				set atom[%h7].restraint.y %o2h1y;
				rbond %h7 %o2 0.2;
				set %lastImage findindexbycustom(IMAGE,%cyt4oxyTag);
				select image %lastimage;
				remove;
				add image o2h1.png (0,0);
				attach image &quot;%number_of_images-1&quot; to bond &quot;%number_of_rbonds-1&quot;;
				set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
				set image[%krebsImage].layer FRONT;
				set %complexImage findindexbycustom(IMAGE, %complexImageTag);
				set image[%complexImage].layer FRONT;
				set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
				set image[%transMemImage].layer FRONT;
				set %h7FinalGrab 0;
				set %grabbingO2H1 0;
				set %readyForElectron 1;
				set %oxygenReduced 0;
			endif;
		endif;
	endif;

	if (%grabbingO2H2);
		if (%grabbingH8);
			if (%farH8Grabbed != 1);
				set %h8 nearest(0, %h8x, %h8y, %rectangle[%h8Area].x, %rectangle[%h8Area].y, %rectangle[%h8Area].width, %rectangle[%h8Area].height);
				if (%h8 != -1);
					set %isPartOfMolecule whichMolecule(%h8);
					set %h4 findindexbycustom(ATOM,%h4Tag);
					if ((%isPartOfMolecule != -1) or (%h8 == %h4));
						set %h8 -1;
					endif;
				endif;
				if (%h8 != -1);
					set %farH8Grabbed 1;
					set atom[%h8].friction 0.1;
					set atom[%h8].restraint %weakRestraint+0.3;
					set atom[%h8].restraint.x %h8x;
					set atom[%h8].restraint.y %h8y;
					set atom[%h8].custom %h8tag;
				endif;
			else;			
				set %closeH8 nearest(0, %h8x, %h8y, %closeRadius);
				if (%closeH8 != -1);
					set %isPartOfMolecule whichMolecule(%closeH8);
					set %h4 findindexbycustom(ATOM,%h4Tag);
					if ((%isPartOfMolecule != -1) or (%closeH8 == %h4));
						set %closeH8 -1;
					endif;
				endif;
				set %h8 findindexbycustom(ATOM,%h8tag);
				set %horzDist abs(%atom[%h8].rx - %h8x);
				if ((%atom[%h8].ry &lt; %h8y) and (%horzDist &lt; 1));
					set %closeH8 %h8;
				endif;
				if (%closeH8 != -1);
					if (%closeH8 != %h8);
						set atom[%h8].restraint 0;
						set atom[%h8].friction 0;
						set atom[%h8].custom 0;
						set atom[%h8].charge 0.05;
						set %h8 %closeH8;
					endif;
					set atom[%h8].friction 0;
					set atom[%h8].charge -0.05;
					set atom[%h8].restraint %strongRestraint;
					set atom[%h8].restraint.x %h8x;
					set atom[%h8].restraint.y %h8y;
					set atom[%h8].custom %h8Tag;
					set %grabbingH8 0;
					set %farH8Grabbed 0;
				endif;
			endif;
		endif;

		if ((%grabbingH8 == 0) and (%h8FinalGrab == 0));
			if ((%h8DelaySet) and (%model_time &gt; %h8Delay));
				set %h8 findindexbycustom(ATOM,%h8tag);
				set atom[%h8].restraint 0;
				set atom[%h8].vx 0;
				set atom[%h8].vy 0;
				set %h8FinalGrab 1;
				set %h8DelaySet 0;
			else;
				if (%h8DelaySet == 0);
					set %h8Delay %model_time+100;
					set %h8DelaySet 1;
				endif;
			endif;
		endif;

		if (%h8FinalGrab == 1);
			set %h8 findindexbycustom(ATOM,%h8tag);
			if (%atom[%h8].ry &lt; %o2h2y);
				set %o2 findindexbycustom(ATOM,%o2grabbed);
				set %h7 findindexbycustom(ATOM,%h7tag);
				set atom[%h8].rx %o2h2x;
				set atom[%h8].ry %o2h2y;
				set atom[%h8].charge 0.05;
				set atom[%h8].friction 0;
				set atom[%h8].restraint 0;
				set atom[%h8].custom 0;
				rbond %h8 %o2 0.2;
				set %lastImage findindexbycustom(IMAGE,%cyt4oxyTag);
				select image %lastimage;
				remove;
				add image o2h2.png (0,0);
				attach image &quot;%number_of_images-1&quot; to bond &quot;%number_of_rbonds-1&quot;;
				set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
				set image[%krebsImage].layer FRONT;
				set %complexImage findindexbycustom(IMAGE, %complexImageTag);
				set image[%complexImage].layer FRONT;
				set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
				set image[%transMemImage].layer FRONT;
				abond %h8 %o2 %h7 2;
				set abond[&quot;%number_of_abonds-1&quot;].bondangle 104.5*pi/180;
				select abond none;
				set atom[%h7].charge 0.05;
				set atom[%h7].friction 0;
				set atom[%h7].restraint 0;
				set atom[%o2].restraint 0;
				set atom[%o2].friction 0;
				set atom[%o2].custom 0;
				set %h8FinalGrab 0;
				set %grabbingO2H2 0;
				set %grabbingOxy 1;
				set %readyForElectron 1;
				set %oxygenReduced 0;
			endif;
		endif;
	endif;
endif;</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>oxidize cytc4</string> 
     </void> 
     <void property="interval"> 
      <int>200</int> 
     </void> 
     <void property="name"> 
      <string>oxidize cytc4</string> 
     </void> 
     <void property="script"> 
      <string>if ((%grabbingOxy == 0) and (%grabbingH4 == 0) and (%grabbingC4Cytc == 0) and (%oxyImageAdded == 0) and (%readyForElectron));
	if ((%cytOxyDelaySet) and (%model_time &gt; %cytOxyDelay));
		set %readyForElectron 0;
		set %c4Cytc findindexbycustom(ATOM, %c4CytcTag);
		set %currentImageC4 whichimageisattached(%c4Cytc, 0);
		select image %currentImageC4;
		remove;
		add image cytcPlain.png atomno=%c4Cytc;
		set %h4 findindexbycustom(ATOM,%h4Tag);
		set atom[%h4].restraint 0;
		set atom[%h4].friction 0;
		set atom[%h4].custom 0;
		set %whichH %whichH+1;
		if  (%whichH == 1);
			set %grabbingH5 1;
			set %grabbingO1H1 1;
			add image o1h1Seq.gif (58.2, 10.2);
			set image[&quot;%number_of_images-1&quot;].loop 1;
			set image[&quot;%number_of_images-1&quot;].layer IN_FRONT_OF_PARTICLES;
			set image[&quot;%number_of_images-1&quot;].custom %cyt4oxyTag;
		endif;
		if  (%whichH == 2);
			set %grabbingH6 1;
			set %grabbingO1H2 1;
			add image o1h2Seq.gif (58.2, 10.2);
			set image[&quot;%number_of_images-1&quot;].loop 1;
			set image[&quot;%number_of_images-1&quot;].layer IN_FRONT_OF_PARTICLES;
			set image[&quot;%number_of_images-1&quot;].custom %cyt4oxyTag;
		endif;
		if  (%whichH == 3);
			set %grabbingH7 1;
			set %grabbingO2H1 1;
			add image o2h1Seq.gif (58.2, 10.2);
			set image[&quot;%number_of_images-1&quot;].loop 1;
			set image[&quot;%number_of_images-1&quot;].layer IN_FRONT_OF_PARTICLES;
			set image[&quot;%number_of_images-1&quot;].custom %cyt4oxyTag;
		endif;	
		if  (%whichH == 4);
			set %grabbingH8 1;
			set %grabbingO2H2 1;
			add image o2h2Seq.gif (58.2, 10.2);
			set image[&quot;%number_of_images-1&quot;].loop 1;
			set image[&quot;%number_of_images-1&quot;].layer IN_FRONT_OF_PARTICLES;
			set image[&quot;%number_of_images-1&quot;].custom %cyt4oxyTag;
			set %whichH 0;
		endif;
		set %krebsImage findindexbycustom(IMAGE, %krebsImageTag);
		set image[%krebsImage].layer FRONT;
		set %complexImage findindexbycustom(IMAGE, %complexImageTag);
		set image[%complexImage].layer FRONT;
		set %transMemImage findindexbycustom(IMAGE, %transMemImageTag);
		set image[%transMemImage].layer FRONT;
		set %oxyImageAdded 1;
		set %endcytOxyDelay %model_time+1200;
	else;
		if (%cytOxyDelaySet == 0);
			set %cytOxyDelay %model_time+500;
			set %cytOxyDelaySet 1;
		endif;	
	endif;
endif;

if ((%oxyImageAdded) and (%model_time &gt; %endcytOxyDelay));
	set %c4Cytc findindexbycustom(ATOM, %c4CytcTag);
	set atom[%c4Cytc].friction 0;
	set atom[%c4Cytc].restraint 0;
	set atom[%c4Cytc].custom 0;
	set atom[%c4Cytc].vy -100-rand()*-100;
	set %grabbingC4Cytc 1;
	set %oxyImageAdded 0;
	set %cytOxyDelaySet 0;
	set %oxygenReduced 1;
	set %grabbingH4 1;
endif;
</string> 
     </void> 
    </object> 
   </void> 
   <void method="add"> 
    <object class="org.concord.mw2d.models.TaskAttributes"> 
     <void property="description"> 
      <string>remove water from h channels</string> 
     </void> 
     <void property="interval"> 
      <int>1000</int> 
     </void> 
     <void property="name"> 
      <string>unstick water</string> 
     </void> 
     <void property="script"> 
      <string>set %hatom nearest(0,%h1x,%h1y,%rectangle[0].x,%rectangle[0].y,%rectangle[0].width,%rectangle[0].height);
if (%hatom != -1);
	set %isPartOfMolecule whichMolecule(%hatom);
	if ((%isPartOfMolecule != -1) and %atom[%hatom].charge &gt; 0));
		set atom[%hatom].charge -0.05;
	endif;
endif;
set %hatom nearest(0,%h2x,%h2y,%rectangle[1].x,%rectangle[1].y,%rectangle[1].width,%rectangle[1].height);
if (%hatom != -1);
	set %isPartOfMolecule whichMolecule(%hatom);
	if ((%isPartOfMolecule != -1) and %atom[%hatom].charge &gt; 0));
		set atom[%hatom].charge -0.05;
	endif;
endif;
set %hatom nearest(0,%h3x,%h3y,%rectangle[2].x,%rectangle[2].y,%rectangle[2].width,%rectangle[2].height);
if (%hatom != -1);
	set %isPartOfMolecule whichMolecule(%hatom);
	if ((%isPartOfMolecule != -1) and %atom[%hatom].charge &gt; 0));
		set atom[%hatom].charge -0.05;
	endif;
endif;
set %hatom nearest(0,%h4x,%h4y,%rectangle[3].x,%rectangle[3].y,%rectangle[3].width,%rectangle[3].height);
if (%hatom != -1);
	set %isPartOfMolecule whichMolecule(%hatom);
	if ((%isPartOfMolecule != -1) and %atom[%hatom].charge &gt; 0));
		set atom[%hatom].charge -0.05;
	endif;
endif;
set %hatom nearest(0,%h5x,%h5y,%rectangle[4].x,%rectangle[4].y,%rectangle[4].width,%rectangle[4].height);
if (%hatom != -1);
	set %isPartOfMolecule whichMolecule(%hatom);
	if ((%isPartOfMolecule != -1) and %atom[%hatom].charge &lt; 0));
		set atom[%hatom].charge 0.05;
	endif;
endif;
set %hatom nearest(0,%h7x,%h7y,%rectangle[5].x,%rectangle[5].y,%rectangle[5].width,%rectangle[5].height);
if (%hatom != -1);
	set %isPartOfMolecule whichMolecule(%hatom);
	if ((%isPartOfMolecule != -1) and %atom[%hatom].charge &lt; 0));
		set atom[%hatom].charge 0.05;
	endif;
endif;
</string> 
     </void> 
    </object> 
   </void> 
  </void> 
  <void property="timeStep"> 
   <double>0.69999999</double> 
  </void> 
  <void property="universe"> 
   <object class="org.concord.mw2d.models.Universe"> 
    <void property="viscosity"> 
     <float>0.2</float> 
    </void> 
   </object> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.AtomisticView$State"> 
  <void property="colorCode"> 
   <string>None</string> 
  </void> 
  <void property="drawCharge"> 
   <boolean>false</boolean> 
  </void> 
  <void property="elementColors"> 
   <void index="0"> 
    <int>-26215</int> 
   </void> 
   <void index="1"> 
    <int>-16737793</int> 
   </void> 
   <void index="3"> 
    <int>-3407872</int> 
   </void> 
  </void> 
  <void property="forceFlavor"> 
   <void property="color"> 
    <object class="java.awt.Color"> 
     <int>255</int> 
     <int>0</int> 
     <int>255</int> 
     <int>255</int> 
    </object> 
   </void> 
  </void> 
  <void property="images"> 
   <array class="org.concord.mw2d.models.ImageComponent$Delegate" length="15"> 
    <void index="0"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>etc.png</string> 
      </void> 
      <void property="draggable"> 
       <boolean>false</boolean> 
      </void> 
      <void property="layer"> 
       <int>2</int> 
      </void> 
      <void property="x"> 
       <double>-15.0</double> 
      </void> 
      <void property="y"> 
       <double>1.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="1"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>uqPlain.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>46</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>12</byte> 
      </void> 
      <void property="x"> 
       <double>183.53417081021965</double> 
      </void> 
      <void property="y"> 
       <double>237.09292433622988</double> 
      </void> 
     </object> 
    </void> 
    <void index="2"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>uqPlain.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>42</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>13</byte> 
      </void> 
      <void property="x"> 
       <double>203.5</double> 
      </void> 
      <void property="y"> 
       <double>191.5</double> 
      </void> 
     </object> 
    </void> 
    <void index="3"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>uqPlain.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>43</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>14</byte> 
      </void> 
      <void property="x"> 
       <double>360.80727817746805</double> 
      </void> 
      <void property="y"> 
       <double>224.86515697996572</double> 
      </void> 
     </object> 
    </void> 
    <void index="4"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>uqPlain.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>45</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>15</byte> 
      </void> 
      <void property="x"> 
       <double>285.5</double> 
      </void> 
      <void property="y"> 
       <double>200.5</double> 
      </void> 
     </object> 
    </void> 
    <void index="5"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>uqPlain.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>44</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>16</byte> 
      </void> 
      <void property="x"> 
       <double>345.5</double> 
      </void> 
      <void property="y"> 
       <double>192.5</double> 
      </void> 
     </object> 
    </void> 
    <void index="6"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>cytcPlain.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>48</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>18</byte> 
      </void> 
      <void property="x"> 
       <double>200.5</double> 
      </void> 
      <void property="y"> 
       <double>79.5</double> 
      </void> 
     </object> 
    </void> 
    <void index="7"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>cytcPlain.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>49</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>21</byte> 
      </void> 
      <void property="x"> 
       <double>98.5</double> 
      </void> 
      <void property="y"> 
       <double>75.5</double> 
      </void> 
     </object> 
    </void> 
    <void index="8"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>cytcPlain.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>50</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>22</byte> 
      </void> 
      <void property="x"> 
       <double>346.5</double> 
      </void> 
      <void property="y"> 
       <double>28.5</double> 
      </void> 
     </object> 
    </void> 
    <void index="9"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>cytcPlain.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>51</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>23</byte> 
      </void> 
      <void property="x"> 
       <double>596.5</double> 
      </void> 
      <void property="y"> 
       <double>36.5</double> 
      </void> 
     </object> 
    </void> 
    <void index="10"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>succinate.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>59</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>24</byte> 
      </void> 
      <void property="x"> 
       <double>470.0</double> 
      </void> 
      <void property="y"> 
       <double>445.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="11"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>nadh.png</string> 
      </void> 
      <void property="hostIndex"> 
       <int>58</int> 
      </void> 
      <void property="hostType"> 
       <string>class org.concord.mw2d.models.Atom</string> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>25</byte> 
      </void> 
      <void property="x"> 
       <double>257.5</double> 
      </void> 
      <void property="y"> 
       <double>448.5</double> 
      </void> 
     </object> 
    </void> 
    <void index="12"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>krebsCycle.png</string> 
      </void> 
      <void property="custom"> 
       <float>2000.0</float> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>26</byte> 
      </void> 
      <void property="x"> 
       <double>198.0</double> 
      </void> 
      <void property="y"> 
       <double>439.5</double> 
      </void> 
     </object> 
    </void> 
    <void index="13"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>proteinOverlay.png</string> 
      </void> 
      <void property="custom"> 
       <float>3000.0</float> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>27</byte> 
      </void> 
      <void property="x"> 
       <double>17.0</double> 
      </void> 
      <void property="y"> 
       <double>134.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="14"> 
     <object class="org.concord.mw2d.models.ImageComponent$Delegate"> 
      <void property="URI"> 
       <string>membraneTrans.png</string> 
      </void> 
      <void property="custom"> 
       <float>4000.0</float> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>28</byte> 
      </void> 
      <void property="x"> 
       <double>-13.0</double> 
      </void> 
      <void property="y"> 
       <double>123.0</double> 
      </void> 
     </object> 
    </void> 
   </array> 
  </void> 
  <void property="momentumFlavor"> 
   <void property="color"> 
    <object class="java.awt.Color"> 
     <int>0</int> 
     <int>0</int> 
     <int>255</int> 
     <int>255</int> 
    </object> 
   </void> 
  </void> 
  <void property="monochromatic"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rectangles"> 
   <array class="org.concord.mw2d.models.RectangleComponent$Delegate" length="14"> 
    <void index="0"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>192.0</float> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>1</byte> 
      </void> 
      <void property="vectorField"> 
       <object class="org.concord.mw2d.models.ElectricField"> 
        <void property="frequency"> 
         <double>0.006283185307179587</double> 
        </void> 
        <void property="intensity"> 
         <double>-0.20000000298023224</double> 
        </void> 
        <void property="local"> 
         <boolean>true</boolean> 
        </void> 
        <void property="orientation"> 
         <int>3001</int> 
        </void> 
       </object> 
      </void> 
      <void property="viscosity"> 
       <float>0.1</float> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>12.0</float> 
      </void> 
      <void property="x"> 
       <double>34.0</double> 
      </void> 
      <void property="y"> 
       <double>142.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="1"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>196.0</float> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>2</byte> 
      </void> 
      <void property="vectorField"> 
       <object class="org.concord.mw2d.models.ElectricField"> 
        <void property="frequency"> 
         <double>0.031415926535897934</double> 
        </void> 
        <void property="intensity"> 
         <double>0.20000000298023224</double> 
        </void> 
        <void property="local"> 
         <boolean>true</boolean> 
        </void> 
        <void property="orientation"> 
         <int>3003</int> 
        </void> 
       </object> 
      </void> 
      <void property="viscosity"> 
       <float>0.1</float> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>12.0</float> 
      </void> 
      <void property="x"> 
       <double>53.0</double> 
      </void> 
      <void property="y"> 
       <double>144.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="2"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>207.0</float> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>3</byte> 
      </void> 
      <void property="vectorField"> 
       <object class="org.concord.mw2d.models.ElectricField"> 
        <void property="frequency"> 
         <double>0.006283185307179587</double> 
        </void> 
        <void property="intensity"> 
         <double>-0.20000000298023224</double> 
        </void> 
        <void property="local"> 
         <boolean>true</boolean> 
        </void> 
        <void property="orientation"> 
         <int>3001</int> 
        </void> 
       </object> 
      </void> 
      <void property="viscosity"> 
       <float>0.11</float> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>12.0</float> 
      </void> 
      <void property="x"> 
       <double>430.0</double> 
      </void> 
      <void property="y"> 
       <double>138.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="3"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>220.0</float> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>4</byte> 
      </void> 
      <void property="vectorField"> 
       <object class="org.concord.mw2d.models.ElectricField"> 
        <void property="frequency"> 
         <double>0.06911503837897545</double> 
        </void> 
        <void property="intensity"> 
         <double>-0.20000000298023224</double> 
        </void> 
        <void property="local"> 
         <boolean>true</boolean> 
        </void> 
        <void property="orientation"> 
         <int>3001</int> 
        </void> 
       </object> 
      </void> 
      <void property="viscosity"> 
       <float>0.11</float> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>11.0</float> 
      </void> 
      <void property="x"> 
       <double>626.0</double> 
      </void> 
      <void property="y"> 
       <double>130.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="4"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>77.0</float> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>5</byte> 
      </void> 
      <void property="vectorField"> 
       <object class="org.concord.mw2d.models.ElectricField"> 
        <void property="frequency"> 
         <double>0.06911503837897545</double> 
        </void> 
        <void property="intensity"> 
         <double>0.10999999940395355</double> 
        </void> 
        <void property="local"> 
         <boolean>true</boolean> 
        </void> 
        <void property="orientation"> 
         <int>3003</int> 
        </void> 
       </object> 
      </void> 
      <void property="viscosity"> 
       <float>0.11</float> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>15.0</float> 
      </void> 
      <void property="x"> 
       <double>644.5</double> 
      </void> 
      <void property="y"> 
       <double>271.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="5"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>77.0</float> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>6</byte> 
      </void> 
      <void property="vectorField"> 
       <object class="org.concord.mw2d.models.ElectricField"> 
        <void property="frequency"> 
         <double>0.06911503837897545</double> 
        </void> 
        <void property="intensity"> 
         <double>0.18000000715255737</double> 
        </void> 
        <void property="local"> 
         <boolean>true</boolean> 
        </void> 
        <void property="orientation"> 
         <int>3003</int> 
        </void> 
       </object> 
      </void> 
      <void property="viscosity"> 
       <float>0.1</float> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>15.0</float> 
      </void> 
      <void property="x"> 
       <double>696.5</double> 
      </void> 
      <void property="y"> 
       <double>272.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="6"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>72.0</float> 
      </void> 
      <void property="layer"> 
       <int>2</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>7</byte> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>174.0</float> 
      </void> 
      <void property="x"> 
       <double>5.0</double> 
      </void> 
      <void property="y"> 
       <double>342.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="7"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>79.0</float> 
      </void> 
      <void property="layer"> 
       <int>2</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>8</byte> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>176.0</float> 
      </void> 
      <void property="x"> 
       <double>4.0</double> 
      </void> 
      <void property="y"> 
       <double>417.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="8"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>145.0</float> 
      </void> 
      <void property="layer"> 
       <int>2</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>9</byte> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>173.0</float> 
      </void> 
      <void property="x"> 
       <double>367.0</double> 
      </void> 
      <void property="y"> 
       <double>350.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="9"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>70.0</float> 
      </void> 
      <void property="layer"> 
       <int>2</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>10</byte> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>194.0</float> 
      </void> 
      <void property="x"> 
       <double>554.0</double> 
      </void> 
      <void property="y"> 
       <double>353.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="10"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>67.0</float> 
      </void> 
      <void property="layer"> 
       <int>2</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>11</byte> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>199.0</float> 
      </void> 
      <void property="x"> 
       <double>554.0</double> 
      </void> 
      <void property="y"> 
       <double>428.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="11"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>107.0</float> 
      </void> 
      <void property="layer"> 
       <int>1</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>17</byte> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>259.0</float> 
      </void> 
      <void property="x"> 
       <double>162.5</double> 
      </void> 
      <void property="y"> 
       <double>174.5</double> 
      </void> 
     </object> 
    </void> 
    <void index="12"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>92.0</float> 
      </void> 
      <void property="layer"> 
       <int>2</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>19</byte> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>743.0</float> 
      </void> 
      <void property="x"> 
       <double>1.5</double> 
      </void> 
      <void property="y"> 
       <double>11.0</double> 
      </void> 
     </object> 
    </void> 
    <void index="13"> 
     <object class="org.concord.mw2d.models.RectangleComponent$Delegate"> 
      <void property="height"> 
       <float>146.0</float> 
      </void> 
      <void property="layer"> 
       <int>2</int> 
      </void> 
      <void property="layerPosition"> 
       <byte>20</byte> 
      </void> 
      <void property="visible"> 
       <boolean>false</boolean> 
      </void> 
      <void property="width"> 
       <float>741.0</float> 
      </void> 
      <void property="x"> 
       <double>4.5</double> 
      </void> 
      <void property="y"> 
       <double>355.0</double> 
      </void> 
     </object> 
    </void> 
   </array> 
  </void> 
  <void property="restraintStyle"> 
   <byte>24</byte> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>114.0</double> 
  </void> 
  <void property="ry"> 
   <double>397.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.0165239774819882</double> 
  </void> 
  <void property="vy"> 
   <double>-0.051828218922920014</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>208.76600414938412</double> 
  </void> 
  <void property="ry"> 
   <double>409.47752610803093</double> 
  </void> 
  <void property="vx"> 
   <double>0.004643805904987261</double> 
  </void> 
  <void property="vy"> 
   <double>0.015798883348156326</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>318.0</double> 
  </void> 
  <void property="ry"> 
   <double>392.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.1272191834820165</double> 
  </void> 
  <void property="vy"> 
   <double>-0.042454839469041106</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>251.0</double> 
  </void> 
  <void property="ry"> 
   <double>431.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.03796453499492336</double> 
  </void> 
  <void property="vy"> 
   <double>0.056513355471921836</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>311.2741253471106</double> 
  </void> 
  <void property="ry"> 
   <double>420.3805815426072</double> 
  </void> 
  <void property="vx"> 
   <double>0.009269280070441314</double> 
  </void> 
  <void property="vy"> 
   <double>0.16312554422144865</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>76.0</double> 
  </void> 
  <void property="ry"> 
   <double>373.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.06962912292856073</double> 
  </void> 
  <void property="vy"> 
   <double>0.02895510478807109</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>619.0</double> 
  </void> 
  <void property="ry"> 
   <double>395.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.028695857737499508</double> 
  </void> 
  <void property="vy"> 
   <double>0.07866635188553828</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>339.0</double> 
  </void> 
  <void property="ry"> 
   <double>397.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.039411211219026576</double> 
  </void> 
  <void property="vy"> 
   <double>-0.005643956755415539</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>156.746805119579</double> 
  </void> 
  <void property="ry"> 
   <double>472.73066791267667</double> 
  </void> 
  <void property="vx"> 
   <double>-0.08787705402993856</double> 
  </void> 
  <void property="vy"> 
   <double>0.07208890993414963</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>163.45401713007396</double> 
  </void> 
  <void property="ry"> 
   <double>351.99904905975706</double> 
  </void> 
  <void property="vx"> 
   <double>-0.07287513446189811</double> 
  </void> 
  <void property="vy"> 
   <double>0.03906103837025668</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>351.0</double> 
  </void> 
  <void property="ry"> 
   <double>421.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.007596635959351689</double> 
  </void> 
  <void property="vy"> 
   <double>-7.810053014634329E-4</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>482.42069356951595</double> 
  </void> 
  <void property="ry"> 
   <double>433.31973629421475</double> 
  </void> 
  <void property="vx"> 
   <double>0.08796492728394703</double> 
  </void> 
  <void property="vy"> 
   <double>0.041455308509471184</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>508.29075154763683</double> 
  </void> 
  <void property="ry"> 
   <double>401.5469100398744</double> 
  </void> 
  <void property="vx"> 
   <double>-0.036754612440422316</double> 
  </void> 
  <void property="vy"> 
   <double>-0.029278461526951072</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>167.7762063443763</double> 
  </void> 
  <void property="ry"> 
   <double>494.2669195142343</double> 
  </void> 
  <void property="vx"> 
   <double>-0.059981544451769106</double> 
  </void> 
  <void property="vy"> 
   <double>0.04477398102820525</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>279.0</double> 
  </void> 
  <void property="ry"> 
   <double>413.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.0710584789495264</double> 
  </void> 
  <void property="vy"> 
   <double>-0.06865213413332905</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>639.3118090384945</double> 
  </void> 
  <void property="ry"> 
   <double>425.6113503529529</double> 
  </void> 
  <void property="vx"> 
   <double>-0.02024239293006934</double> 
  </void> 
  <void property="vy"> 
   <double>-0.01762744722082802</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>445.0</double> 
  </void> 
  <void property="ry"> 
   <double>412.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.07000332844221054</double> 
  </void> 
  <void property="vy"> 
   <double>-0.011339771978687605</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>388.13565037207263</double> 
  </void> 
  <void property="ry"> 
   <double>400.93479223425544</double> 
  </void> 
  <void property="vx"> 
   <double>-0.018727979264737418</double> 
  </void> 
  <void property="vy"> 
   <double>-0.0051050019087845915</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>620.4273164075232</double> 
  </void> 
  <void property="ry"> 
   <double>472.0143170663226</double> 
  </void> 
  <void property="vx"> 
   <double>-0.012953840823408358</double> 
  </void> 
  <void property="vy"> 
   <double>0.08993568502249578</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>676.9660982164935</double> 
  </void> 
  <void property="ry"> 
   <double>419.4098826287922</double> 
  </void> 
  <void property="vx"> 
   <double>-0.11489963625342574</double> 
  </void> 
  <void property="vy"> 
   <double>0.014183360232254952</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>684.1432001882708</double> 
  </void> 
  <void property="ry"> 
   <double>468.7508997307212</double> 
  </void> 
  <void property="vx"> 
   <double>0.07699960883008755</double> 
  </void> 
  <void property="vy"> 
   <double>0.11199803909240438</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>492.950153217921</double> 
  </void> 
  <void property="ry"> 
   <double>430.0556603063052</double> 
  </void> 
  <void property="vx"> 
   <double>0.09252106088070917</double> 
  </void> 
  <void property="vy"> 
   <double>0.04071831958552634</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>662.0</double> 
  </void> 
  <void property="ry"> 
   <double>391.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.03053585185172207</double> 
  </void> 
  <void property="vy"> 
   <double>3.0114032873829763E-4</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>699.0</double> 
  </void> 
  <void property="ry"> 
   <double>389.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.01317511504966575</double> 
  </void> 
  <void property="vy"> 
   <double>0.07417352755541293</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>663.3876262240984</double> 
  </void> 
  <void property="ry"> 
   <double>467.54490389990775</double> 
  </void> 
  <void property="vx"> 
   <double>0.04284431071784991</double> 
  </void> 
  <void property="vy"> 
   <double>-0.013360391773389867</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>125.21521114532837</double> 
  </void> 
  <void property="ry"> 
   <double>126.48051682738124</double> 
  </void> 
  <void property="vx"> 
   <double>-0.027132633188472418</double> 
  </void> 
  <void property="vy"> 
   <double>0.054264582977707115</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>70.78463591706308</double> 
  </void> 
  <void property="ry"> 
   <double>126.67564733182823</double> 
  </void> 
  <void property="vx"> 
   <double>0.007007725443478068</double> 
  </void> 
  <void property="vy"> 
   <double>0.08055586754091741</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>227.42400068237112</double> 
  </void> 
  <void property="ry"> 
   <double>5.188696518745611</double> 
  </void> 
  <void property="vx"> 
   <double>0.096275817581501</double> 
  </void> 
  <void property="vy"> 
   <double>0.08659049197113242</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>165.92150576647734</double> 
  </void> 
  <void property="ry"> 
   <double>36.71408724586221</double> 
  </void> 
  <void property="vx"> 
   <double>0.142583677762752</double> 
  </void> 
  <void property="vy"> 
   <double>-0.12787802241374918</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>198.66775097751594</double> 
  </void> 
  <void property="ry"> 
   <double>53.097035248901946</double> 
  </void> 
  <void property="vx"> 
   <double>0.0849125322253247</double> 
  </void> 
  <void property="vy"> 
   <double>-0.0652291108639828</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>466.95308457784716</double> 
  </void> 
  <void property="ry"> 
   <double>104.39546029477505</double> 
  </void> 
  <void property="vx"> 
   <double>0.05126261728898532</double> 
  </void> 
  <void property="vy"> 
   <double>0.05366014641590763</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>327.95796163588693</double> 
  </void> 
  <void property="ry"> 
   <double>42.710811866856446</double> 
  </void> 
  <void property="vx"> 
   <double>0.018146983066778956</double> 
  </void> 
  <void property="vy"> 
   <double>-0.026071560306901758</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>304.39793364407717</double> 
  </void> 
  <void property="ry"> 
   <double>7.948714248352813</double> 
  </void> 
  <void property="vx"> 
   <double>-0.04031740557730331</double> 
  </void> 
  <void property="vy"> 
   <double>0.07989016120671365</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>142.12137194147473</double> 
  </void> 
  <void property="ry"> 
   <double>54.7764620823694</double> 
  </void> 
  <void property="vx"> 
   <double>0.011436693062491171</double> 
  </void> 
  <void property="vy"> 
   <double>-0.01907211184217034</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>573.3485782487414</double> 
  </void> 
  <void property="ry"> 
   <double>81.6796947914413</double> 
  </void> 
  <void property="vx"> 
   <double>0.024541301518076042</double> 
  </void> 
  <void property="vy"> 
   <double>0.02379111672679424</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>486.2328883786845</double> 
  </void> 
  <void property="ry"> 
   <double>93.32891592896641</double> 
  </void> 
  <void property="vx"> 
   <double>0.09582811215852335</double> 
  </void> 
  <void property="vy"> 
   <double>-0.007839221457658753</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>650.9984046883509</double> 
  </void> 
  <void property="ry"> 
   <double>104.61867536019638</double> 
  </void> 
  <void property="vx"> 
   <double>-0.05417826213605396</double> 
  </void> 
  <void property="vy"> 
   <double>0.06635519747903194</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>585.2893353969985</double> 
  </void> 
  <void property="ry"> 
   <double>54.20714597552518</double> 
  </void> 
  <void property="vx"> 
   <double>-0.0012065522251824</double> 
  </void> 
  <void property="vy"> 
   <double>-0.03141385718587544</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>605.2569721636775</double> 
  </void> 
  <void property="ry"> 
   <double>110.39544450825935</double> 
  </void> 
  <void property="vx"> 
   <double>0.04177066300392</double> 
  </void> 
  <void property="vy"> 
   <double>-0.011074642307940233</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>744.137953514436</double> 
  </void> 
  <void property="ry"> 
   <double>9.90917088636321</double> 
  </void> 
  <void property="vx"> 
   <double>-0.005403382236289288</double> 
  </void> 
  <void property="vy"> 
   <double>-0.04185640004808901</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>738.1116462488914</double> 
  </void> 
  <void property="ry"> 
   <double>45.50899967361833</double> 
  </void> 
  <void property="vx"> 
   <double>-0.015180707928733725</double> 
  </void> 
  <void property="vy"> 
   <double>5.929588500431294E-4</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>606.0707247269307</double> 
  </void> 
  <void property="ry"> 
   <double>120.94769433193022</double> 
  </void> 
  <void property="vx"> 
   <double>-0.026903577941779475</double> 
  </void> 
  <void property="vy"> 
   <double>-0.026906142717279355</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>230.0</double> 
  </void> 
  <void property="ry"> 
   <double>208.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>-0.03825535992861538</double> 
  </void> 
  <void property="vy"> 
   <double>0.06357503798381413</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>387.30727817746805</double> 
  </void> 
  <void property="ry"> 
   <double>241.36515697996572</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>0.07227033352219334</double> 
  </void> 
  <void property="vy"> 
   <double>-0.06465959995608019</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>372.0</double> 
  </void> 
  <void property="ry"> 
   <double>209.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>0.06034219240736871</double> 
  </void> 
  <void property="vy"> 
   <double>-0.0022231309010420385</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>312.0</double> 
  </void> 
  <void property="ry"> 
   <double>217.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>0.031774082954264773</double> 
  </void> 
  <void property="vy"> 
   <double>-0.01901024728964262</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>210.03417081021965</double> 
  </void> 
  <void property="ry"> 
   <double>253.59292433622988</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>0.02619708793252574</double> 
  </void> 
  <void property="vy"> 
   <double>-0.010000254905580135</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>39.0</double> 
  </void> 
  <void property="ry"> 
   <double>352.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.0524302436659921</double> 
  </void> 
  <void property="vy"> 
   <double>0.060714690465078915</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>227.0</double> 
  </void> 
  <void property="ry"> 
   <double>96.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>-0.015804169235373516</double> 
  </void> 
  <void property="vy"> 
   <double>-0.06827577599404343</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>125.0</double> 
  </void> 
  <void property="ry"> 
   <double>92.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>-0.08296752096401894</double> 
  </void> 
  <void property="vy"> 
   <double>0.007199616853346574</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>373.0</double> 
  </void> 
  <void property="ry"> 
   <double>45.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>0.04459975701069793</double> 
  </void> 
  <void property="vy"> 
   <double>0.030648914389637478</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>623.0</double> 
  </void> 
  <void property="ry"> 
   <double>53.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>0.042623019345793746</double> 
  </void> 
  <void property="vy"> 
   <double>-0.027562327050752688</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="movable"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>407.0</double> 
  </void> 
  <void property="ry"> 
   <double>314.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>-0.040330351631354525</double> 
  </void> 
  <void property="vy"> 
   <double>-0.0049922899432708065</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="movable"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>408.0</double> 
  </void> 
  <void property="ry"> 
   <double>326.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>0.05574312317338132</double> 
  </void> 
  <void property="vy"> 
   <double>0.0014662951903980002</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="movable"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>414.0</double> 
  </void> 
  <void property="ry"> 
   <double>336.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>0.024072745821530808</double> 
  </void> 
  <void property="vy"> 
   <double>-0.050641682330978904</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="movable"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>425.0</double> 
  </void> 
  <void property="ry"> 
   <double>341.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>-0.0626317230486301</double> 
  </void> 
  <void property="vy"> 
   <double>0.04984405378111574</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="movable"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>51.0</double> 
  </void> 
  <void property="ry"> 
   <double>327.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>0.04716327506237629</double> 
  </void> 
  <void property="vy"> 
   <double>0.0019458840865686628</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="movable"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>71.0</double> 
  </void> 
  <void property="ry"> 
   <double>334.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>0.02202943582633221</double> 
  </void> 
  <void property="vy"> 
   <double>0.02912271727603347</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>285.0</double> 
  </void> 
  <void property="ry"> 
   <double>476.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>-0.014003157430374719</double> 
  </void> 
  <void property="vy"> 
   <double>-0.03542309777558316</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>2</int> 
  </void> 
  <void property="rx"> 
   <double>505.0</double> 
  </void> 
  <void property="ry"> 
   <double>472.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>-0.020625994722771965</double> 
  </void> 
  <void property="vy"> 
   <double>-0.0036026003135629704</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>275.0</double> 
  </void> 
  <void property="ry"> 
   <double>146.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.07134286602027674</double> 
  </void> 
  <void property="vy"> 
   <double>-0.035876721409188725</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="draggable"> 
   <boolean>false</boolean> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>295.0</double> 
  </void> 
  <void property="ry"> 
   <double>146.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.08806949868126618</double> 
  </void> 
  <void property="vy"> 
   <double>-0.12003716440571774</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="draggable"> 
   <boolean>false</boolean> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>303.1263384073586</double> 
  </void> 
  <void property="ry"> 
   <double>68.26802297985088</double> 
  </void> 
  <void property="vx"> 
   <double>-0.1002203639523209</double> 
  </void> 
  <void property="vy"> 
   <double>0.015238677053198785</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="draggable"> 
   <boolean>false</boolean> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>312.8736615926414</double> 
  </void> 
  <void property="ry"> 
   <double>85.73197702014912</double> 
  </void> 
  <void property="vx"> 
   <double>-0.0364081053113682</double> 
  </void> 
  <void property="vy"> 
   <double>0.026329447858746</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>594.667576729931</double> 
  </void> 
  <void property="ry"> 
   <double>430.41936656459336</double> 
  </void> 
  <void property="vx"> 
   <double>0.036817738541787756</double> 
  </void> 
  <void property="vy"> 
   <double>0.0661950698553598</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>579.3324232700691</double> 
  </void> 
  <void property="ry"> 
   <double>417.58063343540647</double> 
  </void> 
  <void property="vx"> 
   <double>0.010542386287175073</double> 
  </void> 
  <void property="vy"> 
   <double>0.0015033103452781267</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>137.7073357240884</double> 
  </void> 
  <void property="ry"> 
   <double>446.588534620723</double> 
  </void> 
  <void property="vx"> 
   <double>-0.1199745925523225</double> 
  </void> 
  <void property="vy"> 
   <double>0.033446773336020724</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>154.2926642759116</double> 
  </void> 
  <void property="ry"> 
   <double>435.411465379277</double> 
  </void> 
  <void property="vx"> 
   <double>0.0951874893185707</double> 
  </void> 
  <void property="vy"> 
   <double>-0.09241133985908502</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>416.34573714518876</double> 
  </void> 
  <void property="ry"> 
   <double>378.989637294583</double> 
  </void> 
  <void property="vx"> 
   <double>-0.014039692882528335</double> 
  </void> 
  <void property="vy"> 
   <double>-0.04131987978656502</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>433.6542628548113</double> 
  </void> 
  <void property="ry"> 
   <double>389.0103627054171</double> 
  </void> 
  <void property="vx"> 
   <double>0.021269224289014906</double> 
  </void> 
  <void property="vy"> 
   <double>-0.05217823927492176</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>679.4037145611478</double> 
  </void> 
  <void property="ry"> 
   <double>85.187295647233</double> 
  </void> 
  <void property="vx"> 
   <double>0.040364955900083155</double> 
  </void> 
  <void property="vy"> 
   <double>-0.011547644194786516</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>698.5962854388522</double> 
  </void> 
  <void property="ry"> 
   <double>90.812704352767</double> 
  </void> 
  <void property="vx"> 
   <double>-0.048898445546307234</double> 
  </void> 
  <void property="vy"> 
   <double>0.08167769384759607</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>97.92893218813452</double> 
  </void> 
  <void property="ry"> 
   <double>58.071067811865476</double> 
  </void> 
  <void property="vx"> 
   <double>-0.038734855370681054</double> 
  </void> 
  <void property="vy"> 
   <double>-0.007781629838981715</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>112.07106781186548</double> 
  </void> 
  <void property="ry"> 
   <double>43.928932188134524</double> 
  </void> 
  <void property="vx"> 
   <double>-0.030686074586367473</double> 
  </void> 
  <void property="vy"> 
   <double>-0.0878677687346459</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>719.9470623004805</double> 
  </void> 
  <void property="ry"> 
   <double>438.9444116065723</double> 
  </void> 
  <void property="vx"> 
   <double>0.10071256257791247</double> 
  </void> 
  <void property="vy"> 
   <double>0.03861563003953141</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>722.0529376995195</double> 
  </void> 
  <void property="ry"> 
   <double>419.0555883934277</double> 
  </void> 
  <void property="vx"> 
   <double>0.014335840184290407</double> 
  </void> 
  <void property="vy"> 
   <double>-0.042537385199825396</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>85.27513455606551</double> 
  </void> 
  <void property="ry"> 
   <double>442.8609341340041</double> 
  </void> 
  <void property="vx"> 
   <double>-0.03749320997932885</double> 
  </void> 
  <void property="vy"> 
   <double>-0.053024141905172066</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>70.72486544393449</double> 
  </void> 
  <void property="ry"> 
   <double>429.13906586599603</double> 
  </void> 
  <void property="vx"> 
   <double>0.03719363170867612</double> 
  </void> 
  <void property="vy"> 
   <double>-0.03578376081079294</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>490.85641418624886</double> 
  </void> 
  <void property="ry"> 
   <double>64.9977983481644</double> 
  </void> 
  <void property="vx"> 
   <double>0.10229412675602151</double> 
  </void> 
  <void property="vy"> 
   <double>0.07882239166114886</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>3</int> 
  </void> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="radical"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>505.1435858137512</double> 
  </void> 
  <void property="ry"> 
   <double>51.002201651835534</double> 
  </void> 
  <void property="vx"> 
   <double>0.11046484047412401</double> 
  </void> 
  <void property="vy"> 
   <double>0.00454896941049637</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>103.0</double> 
  </void> 
  <void property="ry"> 
   <double>489.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.015612994093196811</double> 
  </void> 
  <void property="vy"> 
   <double>0.02306116797218775</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>52.0</double> 
  </void> 
  <void property="ry"> 
   <double>481.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.05282676289424928</double> 
  </void> 
  <void property="vy"> 
   <double>-0.057008265452349306</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>10.0</double> 
  </void> 
  <void property="ry"> 
   <double>418.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.037700779837521875</double> 
  </void> 
  <void property="vy"> 
   <double>0.023494558951695988</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>44.0</double> 
  </void> 
  <void property="ry"> 
   <double>386.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.1180415363452985</double> 
  </void> 
  <void property="vy"> 
   <double>0.0817167541877159</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>110.0</double> 
  </void> 
  <void property="ry"> 
   <double>433.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.024927329553236625</double> 
  </void> 
  <void property="vy"> 
   <double>-0.0015173571783711917</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>169.0</double> 
  </void> 
  <void property="ry"> 
   <double>393.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.10578257209230167</double> 
  </void> 
  <void property="vy"> 
   <double>0.007423242679452876</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>198.0</double> 
  </void> 
  <void property="ry"> 
   <double>349.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.022103017251445003</double> 
  </void> 
  <void property="vy"> 
   <double>0.0036474374000719655</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>234.0</double> 
  </void> 
  <void property="ry"> 
   <double>395.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.045537509751811145</double> 
  </void> 
  <void property="vy"> 
   <double>-0.06819076131676223</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>269.0</double> 
  </void> 
  <void property="ry"> 
   <double>386.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.07114571489637748</double> 
  </void> 
  <void property="vy"> 
   <double>0.024713060887989465</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>360.0</double> 
  </void> 
  <void property="ry"> 
   <double>373.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.08868582694167353</double> 
  </void> 
  <void property="vy"> 
   <double>0.07857552205213815</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>376.0</double> 
  </void> 
  <void property="ry"> 
   <double>332.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.04632108751072997</double> 
  </void> 
  <void property="vy"> 
   <double>-0.02631888779560401</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>409.0</double> 
  </void> 
  <void property="ry"> 
   <double>358.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.028851006044324386</double> 
  </void> 
  <void property="vy"> 
   <double>-0.07956702349446369</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>482.0</double> 
  </void> 
  <void property="ry"> 
   <double>380.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.0469316985790264</double> 
  </void> 
  <void property="vy"> 
   <double>-0.05831672097405467</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>406.0</double> 
  </void> 
  <void property="ry"> 
   <double>426.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.035650644449989506</double> 
  </void> 
  <void property="vy"> 
   <double>-0.016762733151692504</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>487.0</double> 
  </void> 
  <void property="ry"> 
   <double>405.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.12137143185096115</double> 
  </void> 
  <void property="vy"> 
   <double>0.06568800259190358</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>468.0</double> 
  </void> 
  <void property="ry"> 
   <double>370.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.007163889263063996</double> 
  </void> 
  <void property="vy"> 
   <double>0.05011818377031425</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>525.0</double> 
  </void> 
  <void property="ry"> 
   <double>361.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.048733353048476674</double> 
  </void> 
  <void property="vy"> 
   <double>-0.038191707502004735</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>565.0</double> 
  </void> 
  <void property="ry"> 
   <double>335.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.022289526488081024</double> 
  </void> 
  <void property="vy"> 
   <double>-0.044247224955298536</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>551.0</double> 
  </void> 
  <void property="ry"> 
   <double>376.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.053250917094847514</double> 
  </void> 
  <void property="vy"> 
   <double>0.048436920197705666</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>587.0</double> 
  </void> 
  <void property="ry"> 
   <double>476.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.02109235234758777</double> 
  </void> 
  <void property="vy"> 
   <double>0.05601840248449927</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>626.0</double> 
  </void> 
  <void property="ry"> 
   <double>448.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.04277450526122561</double> 
  </void> 
  <void property="vy"> 
   <double>0.0749505859452409</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>602.0</double> 
  </void> 
  <void property="ry"> 
   <double>382.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.056550448189543995</double> 
  </void> 
  <void property="vy"> 
   <double>0.003315806910026013</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>707.0</double> 
  </void> 
  <void property="ry"> 
   <double>368.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.07442521804596623</double> 
  </void> 
  <void property="vy"> 
   <double>-0.05036627984486091</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>735.0</double> 
  </void> 
  <void property="ry"> 
   <double>346.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.0025354182385866754</double> 
  </void> 
  <void property="vy"> 
   <double>-0.04488023823864924</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>735.0</double> 
  </void> 
  <void property="ry"> 
   <double>390.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.018243399968501897</double> 
  </void> 
  <void property="vy"> 
   <double>-0.030744240790933654</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>745.0</double> 
  </void> 
  <void property="ry"> 
   <double>474.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.029314352941071504</double> 
  </void> 
  <void property="vy"> 
   <double>-0.01852645783941017</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>727.0</double> 
  </void> 
  <void property="ry"> 
   <double>483.0</double> 
  </void> 
  <void property="vx"> 
   <double>-0.03909725428432182</double> 
  </void> 
  <void property="vy"> 
   <double>0.0044618786142088035</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="charge"> 
   <double>0.05000000074505806</double> 
  </void> 
  <void property="rx"> 
   <double>697.0</double> 
  </void> 
  <void property="ry"> 
   <double>452.0</double> 
  </void> 
  <void property="vx"> 
   <double>0.011495297822996</double> 
  </void> 
  <void property="vy"> 
   <double>-0.03250532215889184</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.Atom"> 
  <void property="ID"> 
   <int>1</int> 
  </void> 
  <void property="movable"> 
   <boolean>false</boolean> 
  </void> 
  <void property="rx"> 
   <double>641.0</double> 
  </void> 
  <void property="ry"> 
   <double>340.0</double> 
  </void> 
  <void property="visible"> 
   <boolean>false</boolean> 
  </void> 
  <void property="vx"> 
   <double>-0.03046188565078322</double> 
  </void> 
  <void property="vy"> 
   <double>0.023378653607388375</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.MolecularModel$State"> 
  <void property="molecularTorque"> 
   <array class="org.concord.mw2d.models.MolecularTorque" length="10"/> 
  </void> 
  <void property="numberOfBonds"> 
   <int>10</int> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.RadialBond$Delegate"> 
  <void property="atom1"> 
   <int>61</int> 
  </void> 
  <void property="atom2"> 
   <int>60</int> 
  </void> 
  <void property="bondLength"> 
   <double>20.0</double> 
  </void> 
  <void property="bondStrength"> 
   <double>0.2</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.RadialBond$Delegate"> 
  <void property="atom1"> 
   <int>63</int> 
  </void> 
  <void property="atom2"> 
   <int>62</int> 
  </void> 
  <void property="bondLength"> 
   <double>20.0</double> 
  </void> 
  <void property="bondStrength"> 
   <double>0.2</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.RadialBond$Delegate"> 
  <void property="atom1"> 
   <int>65</int> 
  </void> 
  <void property="atom2"> 
   <int>64</int> 
  </void> 
  <void property="bondLength"> 
   <double>20.0</double> 
  </void> 
  <void property="bondStrength"> 
   <double>0.2</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.RadialBond$Delegate"> 
  <void property="atom1"> 
   <int>67</int> 
  </void> 
  <void property="atom2"> 
   <int>66</int> 
  </void> 
  <void property="bondLength"> 
   <double>20.0</double> 
  </void> 
  <void property="bondStrength"> 
   <double>0.2</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.RadialBond$Delegate"> 
  <void property="atom1"> 
   <int>69</int> 
  </void> 
  <void property="atom2"> 
   <int>68</int> 
  </void> 
  <void property="bondLength"> 
   <double>20.0</double> 
  </void> 
  <void property="bondStrength"> 
   <double>0.2</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.RadialBond$Delegate"> 
  <void property="atom1"> 
   <int>71</int> 
  </void> 
  <void property="atom2"> 
   <int>70</int> 
  </void> 
  <void property="bondLength"> 
   <double>20.0</double> 
  </void> 
  <void property="bondStrength"> 
   <double>0.2</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.RadialBond$Delegate"> 
  <void property="atom1"> 
   <int>73</int> 
  </void> 
  <void property="atom2"> 
   <int>72</int> 
  </void> 
  <void property="bondLength"> 
   <double>20.0</double> 
  </void> 
  <void property="bondStrength"> 
   <double>0.2</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.RadialBond$Delegate"> 
  <void property="atom1"> 
   <int>75</int> 
  </void> 
  <void property="atom2"> 
   <int>74</int> 
  </void> 
  <void property="bondLength"> 
   <double>20.0</double> 
  </void> 
  <void property="bondStrength"> 
   <double>0.2</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.RadialBond$Delegate"> 
  <void property="atom1"> 
   <int>77</int> 
  </void> 
  <void property="atom2"> 
   <int>76</int> 
  </void> 
  <void property="bondLength"> 
   <double>20.0</double> 
  </void> 
  <void property="bondStrength"> 
   <double>0.2</double> 
  </void> 
 </object> 
 <object class="org.concord.mw2d.models.RadialBond$Delegate"> 
  <void property="atom1"> 
   <int>79</int> 
  </void> 
  <void property="atom2"> 
   <int>78</int> 
  </void> 
  <void property="bondLength"> 
   <double>20.0</double> 
  </void> 
  <void property="bondStrength"> 
   <double>0.2</double> 
  </void> 
 </object> 
</java> 
